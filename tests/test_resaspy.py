# -*- coding: utf-8 -*-

import unittest
import os

from resaspy import Resaspy

class CommonTest( unittest.TestCase ):
    def setUp( self ):
        api_key = os.environ['RESAS_API_KEY']
        self.resaspy = Resaspy( api_key )

    def test_prefectures( self ):
        expected = {
            "message": None,
            "result": [{
                "prefCode": 1,
                "prefName": "北海道"
            }, {
                "prefCode": 2,
                "prefName": "青森県"
            }, {
                "prefCode": 3,
                "prefName": "岩手県"
            }, {
                "prefCode": 4,
                "prefName": "宮城県"
            }, {
                "prefCode": 5,
                "prefName": "秋田県"
            }, {
                "prefCode": 6,
                "prefName": "山形県"
            }, {
                "prefCode": 7,
                "prefName": "福島県"
            }, {
                "prefCode": 8,
                "prefName": "茨城県"
            }, {
                "prefCode": 9,
                "prefName": "栃木県"
            }, {
                "prefCode": 10,
                "prefName": "群馬県"
            }, {
                "prefCode": 11,
                "prefName": "埼玉県"
            }, {
                "prefCode": 12,
                "prefName": "千葉県"
            }, {
                "prefCode": 13,
                "prefName": "東京都"
            }, {
                "prefCode": 14,
                "prefName": "神奈川県"
            }, {
                "prefCode": 15,
                "prefName": "新潟県"
            }, {
                "prefCode": 16,
                "prefName": "富山県"
            }, {
                "prefCode": 17,
                "prefName": "石川県"
            }, {
                "prefCode": 18,
                "prefName": "福井県"
            }, {
                "prefCode": 19,
                "prefName": "山梨県"
            }, {
                "prefCode": 20,
                "prefName": "長野県"
            }, {
                "prefCode": 21,
                "prefName": "岐阜県"
            }, {
                "prefCode": 22,
                "prefName": "静岡県"
            }, {
                "prefCode": 23,
                "prefName": "愛知県"
            }, {
                "prefCode": 24,
                "prefName": "三重県"
            }, {
                "prefCode": 25,
                "prefName": "滋賀県"
            }, {
                "prefCode": 26,
                "prefName": "京都府"
            }, {
                "prefCode": 27,
                "prefName": "大阪府"
            }, {
                "prefCode": 28,
                "prefName": "兵庫県"
            }, {
                "prefCode": 29,
                "prefName": "奈良県"
            }, {
                "prefCode": 30,
                "prefName": "和歌山県"
            }, {
                "prefCode": 31,
                "prefName": "鳥取県"
            }, {
                "prefCode": 32,
                "prefName": "島根県"
            }, {
                "prefCode": 33,
                "prefName": "岡山県"
            }, {
                "prefCode": 34,
                "prefName": "広島県"
            }, {
                "prefCode": 35,
                "prefName": "山口県"
            }, {
                "prefCode": 36,
                "prefName": "徳島県"
            }, {
                "prefCode": 37,
                "prefName": "香川県"
            }, {
                "prefCode": 38,
                "prefName": "愛媛県"
            }, {
                "prefCode": 39,
                "prefName": "高知県"
            }, {
                "prefCode": 40,
                "prefName": "福岡県"
            }, {
                "prefCode": 41,
                "prefName": "佐賀県"
            }, {
                "prefCode": 42,
                "prefName": "長崎県"
            }, {
                "prefCode": 43,
                "prefName": "熊本県"
            }, {
                "prefCode": 44,
                "prefName": "大分県"
            }, {
                "prefCode": 45,
                "prefName": "宮崎県"
            }, {
                "prefCode": 46,
                "prefName": "鹿児島県"
            }, {
                "prefCode": 47,
                "prefName": "沖縄県"
            }]
        }
        actual = self.resaspy.prefectures()
        self.assertEqual( expected, actual )
        pass

    def test_cities( self ):
        expected = {
            "message": None,
            "result": [{
                "prefCode": 1,
                "cityCode": "01100",
                "cityName": "札幌市",
                "bigCityFlag": "2"
            }, {
                "prefCode": 1,
                "cityCode": "01101",
                "cityName": "札幌市中央区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01102",
                "cityName": "札幌市北区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01103",
                "cityName": "札幌市東区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01104",
                "cityName": "札幌市白石区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01105",
                "cityName": "札幌市豊平区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01106",
                "cityName": "札幌市南区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01107",
                "cityName": "札幌市西区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01108",
                "cityName": "札幌市厚別区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01109",
                "cityName": "札幌市手稲区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01110",
                "cityName": "札幌市清田区",
                "bigCityFlag": "1"
            }, {
                "prefCode": 1,
                "cityCode": "01202",
                "cityName": "函館市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01203",
                "cityName": "小樽市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01204",
                "cityName": "旭川市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01205",
                "cityName": "室蘭市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01206",
                "cityName": "釧路市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01207",
                "cityName": "帯広市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01208",
                "cityName": "北見市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01209",
                "cityName": "夕張市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01210",
                "cityName": "岩見沢市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01211",
                "cityName": "網走市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01212",
                "cityName": "留萌市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01213",
                "cityName": "苫小牧市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01214",
                "cityName": "稚内市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01215",
                "cityName": "美唄市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01216",
                "cityName": "芦別市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01217",
                "cityName": "江別市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01218",
                "cityName": "赤平市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01219",
                "cityName": "紋別市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01220",
                "cityName": "士別市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01221",
                "cityName": "名寄市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01222",
                "cityName": "三笠市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01223",
                "cityName": "根室市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01224",
                "cityName": "千歳市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01225",
                "cityName": "滝川市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01226",
                "cityName": "砂川市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01227",
                "cityName": "歌志内市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01228",
                "cityName": "深川市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01229",
                "cityName": "富良野市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01230",
                "cityName": "登別市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01231",
                "cityName": "恵庭市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01233",
                "cityName": "伊達市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01234",
                "cityName": "北広島市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01235",
                "cityName": "石狩市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01236",
                "cityName": "北斗市",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01303",
                "cityName": "当別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01304",
                "cityName": "新篠津村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01331",
                "cityName": "松前町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01332",
                "cityName": "福島町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01333",
                "cityName": "知内町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01334",
                "cityName": "木古内町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01337",
                "cityName": "七飯町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01343",
                "cityName": "鹿部町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01345",
                "cityName": "森町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01346",
                "cityName": "八雲町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01347",
                "cityName": "長万部町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01361",
                "cityName": "江差町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01362",
                "cityName": "上ノ国町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01363",
                "cityName": "厚沢部町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01364",
                "cityName": "乙部町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01367",
                "cityName": "奥尻町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01370",
                "cityName": "今金町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01371",
                "cityName": "せたな町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01391",
                "cityName": "島牧村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01392",
                "cityName": "寿都町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01393",
                "cityName": "黒松内町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01394",
                "cityName": "蘭越町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01395",
                "cityName": "ニセコ町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01396",
                "cityName": "真狩村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01397",
                "cityName": "留寿都村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01398",
                "cityName": "喜茂別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01399",
                "cityName": "京極町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01400",
                "cityName": "倶知安町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01401",
                "cityName": "共和町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01402",
                "cityName": "岩内町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01403",
                "cityName": "泊村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01404",
                "cityName": "神恵内村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01405",
                "cityName": "積丹町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01406",
                "cityName": "古平町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01407",
                "cityName": "仁木町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01408",
                "cityName": "余市町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01409",
                "cityName": "赤井川村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01423",
                "cityName": "南幌町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01424",
                "cityName": "奈井江町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01425",
                "cityName": "上砂川町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01427",
                "cityName": "由仁町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01428",
                "cityName": "長沼町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01429",
                "cityName": "栗山町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01430",
                "cityName": "月形町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01431",
                "cityName": "浦臼町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01432",
                "cityName": "新十津川町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01433",
                "cityName": "妹背牛町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01434",
                "cityName": "秩父別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01436",
                "cityName": "雨竜町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01437",
                "cityName": "北竜町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01438",
                "cityName": "沼田町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01452",
                "cityName": "鷹栖町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01453",
                "cityName": "東神楽町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01454",
                "cityName": "当麻町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01455",
                "cityName": "比布町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01456",
                "cityName": "愛別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01457",
                "cityName": "上川町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01458",
                "cityName": "東川町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01459",
                "cityName": "美瑛町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01460",
                "cityName": "上富良野町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01461",
                "cityName": "中富良野町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01462",
                "cityName": "南富良野町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01463",
                "cityName": "占冠村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01464",
                "cityName": "和寒町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01465",
                "cityName": "剣淵町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01468",
                "cityName": "下川町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01469",
                "cityName": "美深町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01470",
                "cityName": "音威子府村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01471",
                "cityName": "中川町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01472",
                "cityName": "幌加内町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01481",
                "cityName": "増毛町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01482",
                "cityName": "小平町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01483",
                "cityName": "苫前町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01484",
                "cityName": "羽幌町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01485",
                "cityName": "初山別村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01486",
                "cityName": "遠別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01487",
                "cityName": "天塩町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01511",
                "cityName": "猿払村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01512",
                "cityName": "浜頓別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01513",
                "cityName": "中頓別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01514",
                "cityName": "枝幸町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01516",
                "cityName": "豊富町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01517",
                "cityName": "礼文町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01518",
                "cityName": "利尻町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01519",
                "cityName": "利尻富士町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01520",
                "cityName": "幌延町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01543",
                "cityName": "美幌町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01544",
                "cityName": "津別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01545",
                "cityName": "斜里町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01546",
                "cityName": "清里町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01547",
                "cityName": "小清水町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01549",
                "cityName": "訓子府町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01550",
                "cityName": "置戸町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01552",
                "cityName": "佐呂間町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01555",
                "cityName": "遠軽町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01559",
                "cityName": "湧別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01560",
                "cityName": "滝上町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01561",
                "cityName": "興部町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01562",
                "cityName": "西興部村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01563",
                "cityName": "雄武町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01564",
                "cityName": "大空町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01571",
                "cityName": "豊浦町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01575",
                "cityName": "壮瞥町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01578",
                "cityName": "白老町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01581",
                "cityName": "厚真町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01584",
                "cityName": "洞爺湖町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01585",
                "cityName": "安平町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01586",
                "cityName": "むかわ町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01601",
                "cityName": "日高町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01602",
                "cityName": "平取町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01604",
                "cityName": "新冠町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01607",
                "cityName": "浦河町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01608",
                "cityName": "様似町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01609",
                "cityName": "えりも町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01610",
                "cityName": "新ひだか町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01631",
                "cityName": "音更町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01632",
                "cityName": "士幌町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01633",
                "cityName": "上士幌町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01634",
                "cityName": "鹿追町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01635",
                "cityName": "新得町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01636",
                "cityName": "清水町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01637",
                "cityName": "芽室町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01638",
                "cityName": "中札内村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01639",
                "cityName": "更別村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01641",
                "cityName": "大樹町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01642",
                "cityName": "広尾町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01643",
                "cityName": "幕別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01644",
                "cityName": "池田町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01645",
                "cityName": "豊頃町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01646",
                "cityName": "本別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01647",
                "cityName": "足寄町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01648",
                "cityName": "陸別町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01649",
                "cityName": "浦幌町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01661",
                "cityName": "釧路町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01662",
                "cityName": "厚岸町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01663",
                "cityName": "浜中町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01664",
                "cityName": "標茶町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01665",
                "cityName": "弟子屈町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01667",
                "cityName": "鶴居村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01668",
                "cityName": "白糠町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01691",
                "cityName": "別海町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01692",
                "cityName": "中標津町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01693",
                "cityName": "標津町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01694",
                "cityName": "羅臼町",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01695",
                "cityName": "色丹郡色丹村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01696",
                "cityName": "国後郡泊村・留夜別村",
                "bigCityFlag": "0"
            }, {
                "prefCode": 1,
                "cityCode": "01698",
                "cityName": "択捉郡留別村・紗那村・蘂取",
                "bigCityFlag": "0"
            }]
        }
        actual = self.resaspy.cities( 1 )
        self.assertEqual( expected, actual )
        pass

    def test_old_cities(self):
        expected = {
            "message": None,
            "result": [{
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "01",
                "oldCityName": "奥内村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "02",
                "oldCityName": "横内村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "03",
                "oldCityName": "原別村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "04",
                "oldCityName": "五郷村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "05",
                "oldCityName": "後潟村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "06",
                "oldCityName": "荒川村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "07",
                "oldCityName": "高田村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "08",
                "oldCityName": "七和村２－２"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "10",
                "oldCityName": "女鹿沢村２－１"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "11",
                "oldCityName": "新城村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "12",
                "oldCityName": "青森市"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "13",
                "oldCityName": "大杉村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "14",
                "oldCityName": "大野村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "15",
                "oldCityName": "滝内村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "16",
                "oldCityName": "東岳村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "17",
                "oldCityName": "筒井町"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "18",
                "oldCityName": "浜館村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "20",
                "oldCityName": "野沢村２－１"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "21",
                "oldCityName": "野内村"
            }, {
                "prefCode": 2,
                "cityCode": "02201",
                "cityName": "青森市",
                "oldCityCode": "22",
                "oldCityName": "浪岡町"
            }]
        }
        actual = self.resaspy.old_cities( 2, '02201' )
        self.assertEqual( expected, actual )
        pass

    def test_industries_broad( self ):
        expected = {
            "message": None,
            "result": [{
                "sicCode": "A",
                "sicName": "農業，林業"
            }, {
                "sicCode": "B",
                "sicName": "漁業"
            }, {
                "sicCode": "C",
                "sicName": "鉱業，採石業，砂利採取業"
            }, {
                "sicCode": "D",
                "sicName": "建設業"
            }, {
                "sicCode": "E",
                "sicName": "製造業"
            }, {
                "sicCode": "F",
                "sicName": "電気・ガス・熱供給・水道業"
            }, {
                "sicCode": "G",
                "sicName": "情報通信業"
            }, {
                "sicCode": "H",
                "sicName": "運輸業，郵便業"
            }, {
                "sicCode": "I",
                "sicName": "卸売業，小売業"
            }, {
                "sicCode": "J",
                "sicName": "金融業，保険業"
            }, {
                "sicCode": "K",
                "sicName": "不動産業，物品賃貸業"
            }, {
                "sicCode": "L",
                "sicName": "学術研究，専門・技術サービス業"
            }, {
                "sicCode": "M",
                "sicName": "宿泊業，飲食サービス業"
            }, {
                "sicCode": "N",
                "sicName": "生活関連サービス業，娯楽業"
            }, {
                "sicCode": "O",
                "sicName": "教育，学習支援業"
            }, {
                "sicCode": "P",
                "sicName": "医療，福祉"
            }, {
                "sicCode": "Q",
                "sicName": "複合サービス事業"
            }, {
                "sicCode": "R",
                "sicName": "サービス業（他に分類されないもの）"
            }, {
                "sicCode": "S",
                "sicName": "公務（他に分類されるものを除く）"
            }, {
                "sicCode": "T",
                "sicName": "分類不能の産業"
            }]
        }
        actual = self.resaspy.industries.broad()
        self.assertEqual( expected, actual )
        pass

    def test_industries_middle( self ):
        expected = {
            "message": None,
            "result": [{
                "simcCode": "09",
                "sicCode": "E",
                "simcName": "食料品製造業"
            }, {
                "simcCode": "10",
                "sicCode": "E",
                "simcName": "飲料・たばこ・飼料製造業"
            }, {
                "simcCode": "11",
                "sicCode": "E",
                "simcName": "繊維工業"
            }, {
                "simcCode": "12",
                "sicCode": "E",
                "simcName": "木材・木製品製造業（家具を除く）"
            }, {
                "simcCode": "13",
                "sicCode": "E",
                "simcName": "家具・装備品製造業"
            }, {
                "simcCode": "14",
                "sicCode": "E",
                "simcName": "パルプ・紙・紙加工品製造業"
            }, {
                "simcCode": "15",
                "sicCode": "E",
                "simcName": "印刷・同関連業"
            }, {
                "simcCode": "16",
                "sicCode": "E",
                "simcName": "化学工業"
            }, {
                "simcCode": "17",
                "sicCode": "E",
                "simcName": "石油製品・石炭製品製造業"
            }, {
                "simcCode": "18",
                "sicCode": "E",
                "simcName": "プラスチック製品製造業（別掲を除く）"
            }, {
                "simcCode": "19",
                "sicCode": "E",
                "simcName": "ゴム製品製造業"
            }, {
                "simcCode": "20",
                "sicCode": "E",
                "simcName": "なめし革・同製品・毛皮製造業"
            }, {
                "simcCode": "21",
                "sicCode": "E",
                "simcName": "窯業・土石製品製造業"
            }, {
                "simcCode": "22",
                "sicCode": "E",
                "simcName": "鉄鋼業"
            }, {
                "simcCode": "23",
                "sicCode": "E",
                "simcName": "非鉄金属製造業"
            }, {
                "simcCode": "24",
                "sicCode": "E",
                "simcName": "金属製品製造業"
            }, {
                "simcCode": "25",
                "sicCode": "E",
                "simcName": "はん用機械器具製造業"
            }, {
                "simcCode": "26",
                "sicCode": "E",
                "simcName": "生産用機械器具製造業"
            }, {
                "simcCode": "27",
                "sicCode": "E",
                "simcName": "業務用機械器具製造業"
            }, {
                "simcCode": "28",
                "sicCode": "E",
                "simcName": "電子部品・デバイス・電子回路製造業"
            }, {
                "simcCode": "29",
                "sicCode": "E",
                "simcName": "電気機械器具製造業"
            }, {
                "simcCode": "30",
                "sicCode": "E",
                "simcName": "情報通信機械器具製造業"
            }, {
                "simcCode": "31",
                "sicCode": "E",
                "simcName": "輸送用機械器具製造業"
            }, {
                "simcCode": "32",
                "sicCode": "E",
                "simcName": "その他の製造業"
            }]
        }
        actual = self.resaspy.industries.middle( 'E' )
        self.assertEqual( expected, actual )
        pass

    def test_industries_narrow( self ):
        expected = {
            "message": None,
            "result": [{
                "siscCode": "200",
                "simcCode": "20",
                "siscName": "管理，補助的経済活動を行う事業所（20なめし革・同製品・毛皮製造業）"
            }, {
                "siscCode": "201",
                "simcCode": "20",
                "siscName": "なめし革製造業"
            }, {
                "siscCode": "202",
                "simcCode": "20",
                "siscName": "工業用革製品製造業（手袋を除く）"
            }, {
                "siscCode": "203",
                "simcCode": "20",
                "siscName": "革製履物用材料・同附属品製造業"
            }, {
                "siscCode": "204",
                "simcCode": "20",
                "siscName": "革製履物製造業"
            }, {
                "siscCode": "205",
                "simcCode": "20",
                "siscName": "革製手袋製造業"
            }, {
                "siscCode": "206",
                "simcCode": "20",
                "siscName": "かばん製造業"
            }, {
                "siscCode": "207",
                "simcCode": "20",
                "siscName": "袋物製造業"
            }, {
                "siscCode": "208",
                "simcCode": "20",
                "siscName": "毛皮製造業"
            }, {
                "siscCode": "209",
                "simcCode": "20",
                "siscName": "その他のなめし革製品製造業"
            }]
        }
        actual = self.resaspy.industries.narrow( 20 )
        self.assertEqual( expected, actual )

    def test_jobs_broad( self ):
        expected = {
            "message": None,
            "result": [{
                "iscoCode": "A",
                "iscoName": "管理的職業従事者"
            }, {
                "iscoCode": "B",
                "iscoName": "専門的・技術的職業従事者"
            }, {
                "iscoCode": "C",
                "iscoName": "事務従事者"
            }, {
                "iscoCode": "D",
                "iscoName": "販売従事者"
            }, {
                "iscoCode": "E",
                "iscoName": "サービス職業従事者"
            }, {
                "iscoCode": "F",
                "iscoName": "保安職業従事者"
            }, {
                "iscoCode": "G",
                "iscoName": "農林漁業従事者"
            }, {
                "iscoCode": "H",
                "iscoName": "生産工程従事者"
            }, {
                "iscoCode": "I",
                "iscoName": "輸送・機械運転従事者"
            }, {
                "iscoCode": "J",
                "iscoName": "建設・採掘従事者"
            }, {
                "iscoCode": "K",
                "iscoName": "運搬・清掃・包装等従事者"
            }, {
                "iscoCode": "L",
                "iscoName": "分類不能の職業"
            }]
        }
        actual = self.resaspy.jobs.broad()
        self.assertEqual( expected, actual )
    
    def test_jobs_middle( self ):
        expected = {
            "message": None,
            "result": [{
                "iscoCode": "B",
                "ismcoCode": "05",
                "ismcoName": "研究者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "06",
                "ismcoName": "農林水産技術者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "07",
                "ismcoName": "製造技術者（開発）"
            }, {
                "iscoCode": "B",
                "ismcoCode": "08",
                "ismcoName": "製造技術者（開発を除く）"
            }, {
                "iscoCode": "B",
                "ismcoCode": "09",
                "ismcoName": "建築・土木・測量技術者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "10",
                "ismcoName": "情報処理・通信技術者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "11",
                "ismcoName": "その他の技術者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "12",
                "ismcoName": "医師，歯科医師，獣医師，薬剤師"
            }, {
                "iscoCode": "B",
                "ismcoCode": "13",
                "ismcoName": "保健師，助産師，看護師"
            }, {
                "iscoCode": "B",
                "ismcoCode": "14",
                "ismcoName": "医療技術者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "15",
                "ismcoName": "その他の保健医療従事者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "16",
                "ismcoName": "社会福祉専門職業従事者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "17",
                "ismcoName": "法務従事者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "18",
                "ismcoName": "経営・金融・保険専門職業従事者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "19",
                "ismcoName": "教員"
            }, {
                "iscoCode": "B",
                "ismcoCode": "20",
                "ismcoName": "宗教家"
            }, {
                "iscoCode": "B",
                "ismcoCode": "21",
                "ismcoName": "著述家，記者，編集者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "22",
                "ismcoName": "美術家，デザイナー，写真家，映像撮影者"
            }, {
                "iscoCode": "B",
                "ismcoCode": "23",
                "ismcoName": "音楽家，舞台芸術家"
            }, {
                "iscoCode": "B",
                "ismcoCode": "24",
                "ismcoName": "その他の専門的職業従事者"
            }]
        }
        actual = self.resaspy.jobs.middle( 'B' )
        self.assertEqual( expected, actual )
    
    def test_patents_broad( self ):
        expected = {
            "message": None,
            "result": [{
                "tecCode": "",
                "tecName": ""
            }, {
                "tecCode": "A",
                "tecName": "生活必需品"
            }, {
                "tecCode": "B",
                "tecName": "処理操作；運輸"
            }, {
                "tecCode": "C",
                "tecName": "化学；冶金"
            }, {
                "tecCode": "D",
                "tecName": "繊維；紙"
            }, {
                "tecCode": "E",
                "tecName": "固定構造物"
            }, {
                "tecCode": "F",
                "tecName": "機械工学；照明；加熱；武器；爆破"
            }, {
                "tecCode": "G",
                "tecName": "物理学"
            }, {
                "tecCode": "H",
                "tecName": "電気"
            }]
        }
        actual = self.resaspy.patents.broad()
        self.assertEqual( expected, actual )
    
    def test_patents_middle( self ):
        expected = {
            "message": None,
            "result": [{
                "tecCode": "H",
                "tecName": "電気",
                "themeCode": "H0",
                "themeName": "電気"
            }, {
                "tecCode": "H",
                "tecName": "電気",
                "themeCode": "H9",
                "themeName": "その他"
            }]
        }
        actual = self.resaspy.patents.middle( 'H' )
        self.assertEqual( expected, actual )
    
    def test_customs( self ):
        expected = {
            "message": None,
            "result": [{
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 800,
                "customHouseName": "函館港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 802,
                "customHouseName": "室蘭港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 803,
                "customHouseName": "苫小牧港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 804,
                "customHouseName": "小樽港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 805,
                "customHouseName": "留萌港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 807,
                "customHouseName": "釧路港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 809,
                "customHouseName": "稚内港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 810,
                "customHouseName": "網走港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 811,
                "customHouseName": "紋別港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 812,
                "customHouseName": "新千歳空港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 813,
                "customHouseName": "函館空港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 814,
                "customHouseName": "石狩湾港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 815,
                "customHouseName": "十勝港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 816,
                "customHouseName": "旭川港"
            }, {
                "prefCode": 1,
                "prefName": "北海道",
                "customHouseCode": 818,
                "customHouseName": "花咲港"
            }]
        }
        actual = self.resaspy.customs( 1 )
        self.assertEqual( expected, actual )
    
    def test_regions_broad( self ):
        expected = {
            "message": None,
            "result": [{
                "regionCode": 1,
                "regionName": "アジア州"
            }, {
                "regionCode": 2,
                "regionName": "ヨーロッパ州"
            }, {
                "regionCode": 3,
                "regionName": "北アメリカ州"
            }, {
                "regionCode": 4,
                "regionName": "南アメリカ州"
            }, {
                "regionCode": 5,
                "regionName": "アフリカ州"
            }, {
                "regionCode": 6,
                "regionName": "大洋州"
            }]
        }
        actual = self.resaspy.regions.broad()
        self.assertEqual( expected, actual )
    
    def test_regions_middle( self ):
        expected = {
            "message": None,
            "result": [{
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 103,
                "countryName": "大韓民国",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 104,
                "countryName": "北朝鮮",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 105,
                "countryName": "中華人民共和国",
                "remarks": "香港及びマカオを含まない。"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 106,
                "countryName": "台湾",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 107,
                "countryName": "モンゴル",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 108,
                "countryName": "香港",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 110,
                "countryName": "ベトナム",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 111,
                "countryName": "タイ",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 112,
                "countryName": "シンガポール",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 113,
                "countryName": "マレーシア",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 116,
                "countryName": "ブルネイ",
                "remarks": "(旧英領ブルネイ)"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 117,
                "countryName": "フィリピン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 118,
                "countryName": "インドネシア",
                "remarks": "West Irianを含む。"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 120,
                "countryName": "カンボジア",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 121,
                "countryName": "ラオス",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 122,
                "countryName": "ミャンマー",
                "remarks": "(旧ビルマ)"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 123,
                "countryName": "インド",
                "remarks": "(旧葡領インドを含む。)"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 124,
                "countryName": "パキスタン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 125,
                "countryName": "スリランカ",
                "remarks": "(旧セイロン)"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 126,
                "countryName": "モルディブ",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 127,
                "countryName": "バングラデシュ",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 128,
                "countryName": "東ティモール",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 129,
                "countryName": "マカオ",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 130,
                "countryName": "アフガニスタン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 131,
                "countryName": "ネパール",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 132,
                "countryName": "ブータン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 133,
                "countryName": "イラン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 134,
                "countryName": "イラク",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 135,
                "countryName": "バーレーン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 137,
                "countryName": "サウジアラビア",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 138,
                "countryName": "クウェート",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 140,
                "countryName": "カタール",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 141,
                "countryName": "オマーン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 143,
                "countryName": "イスラエル",
                "remarks": "ヨルダン川西岸を含まない。"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 144,
                "countryName": "ヨルダン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 145,
                "countryName": "シリア",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 146,
                "countryName": "レバノン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 147,
                "countryName": "アラブ首長国連邦",
                "remarks": "(旧トルシアルオーマン）"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 149,
                "countryName": "イエメン",
                "remarks": "Perim, Kamaran, Socotra及びKuria Muria諸島を含む。"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 150,
                "countryName": "アゼルバイジャン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 151,
                "countryName": "アルメニア",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 152,
                "countryName": "ウズベキスタン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 153,
                "countryName": "カザフスタン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 154,
                "countryName": "キルギス",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 155,
                "countryName": "タジキスタン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 156,
                "countryName": "トルクメニスタン",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 157,
                "countryName": "ジョージア",
                "remarks": "（旧グルジア）"
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 158,
                "countryName": "ヨルダン川西岸及びガザ",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 188,
                "countryName": "その他のアジア",
                "remarks": ""
            }, {
                "regionCode": 1,
                "regionName": "アジア州",
                "countryCode": 199,
                "countryName": "その他の中東",
                "remarks": ""
            }]
        }
        actual = self.resaspy.regions.middle(1)
        self.assertEqual( expected, actual )
    
    def test_regions_agriculture_departements( self ):
        expected = {
            "message": None,
            "result": [{
                "sectionCode": "A",
                "sectionName": "稲作"
            }, {
                "sectionCode": "B",
                "sectionName": "麦類作"
            }, {
                "sectionCode": "C",
                "sectionName": "雑穀・いも類・豆類"
            }, {
                "sectionCode": "D",
                "sectionName": "工芸農作物"
            }, {
                "sectionCode": "E",
                "sectionName": "露地野菜"
            }, {
                "sectionCode": "F",
                "sectionName": "施設野菜"
            }, {
                "sectionCode": "G",
                "sectionName": "果樹類"
            }, {
                "sectionCode": "H",
                "sectionName": "花き・花木"
            }, {
                "sectionCode": "I",
                "sectionName": "その他の作物"
            }, {
                "sectionCode": "J",
                "sectionName": "酪農"
            }, {
                "sectionCode": "K",
                "sectionName": "肉用牛"
            }, {
                "sectionCode": "L",
                "sectionName": "養豚"
            }, {
                "sectionCode": "M",
                "sectionName": "養鶏"
            }, {
                "sectionCode": "N",
                "sectionName": "養蚕"
            }, {
                "sectionCode": "O",
                "sectionName": "その他の畜産"
            }, {
                "sectionCode": "P",
                "sectionName": "農作業請負収入"
            }]
        }
        actual = self.resaspy.regions.agriculture_departments()
        self.assertEqual( expected, actual )
    
    def test_patents_locations( self ):
        expected = {
            "message": None,
            "result": [{
                "id": 8032,
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "latitude": 36.07809829711914,
                "longitude": 139.1026153564453
            }, {
                "id": 8035,
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "latitude": 36.077781677246094,
                "longitude": 139.09335327148438
            }, {
                "id": 8100,
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "latitude": 36.07173156738281,
                "longitude": 139.11642456054688
            }, {
                "id": 8180,
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "latitude": 36.064918518066406,
                "longitude": 139.0941925048828
            }]
        }
        actual = self.resaspy.patents.locations( 11, 11362 )
        self.assertEqual( expected, actual )
    
    def test_trade_info_item_types_broad( self ):
        expected = {
            "message": None,
            "result": [{
                "itemCode1": 1,
                "itemName1": "動物（生きているものに限る。）及び動物性生産品"
            }, {
                "itemCode1": 3,
                "itemName1": "動物性又は植物性の油脂及びその分解生産物、調製食用脂並びに動物性又は植物性のろう"
            }, {
                "itemCode1": 4,
                "itemName1": "調製食料品、飲料、アルコール、食酢、たばこ及び製造たばこ代用品"
            }, {
                "itemCode1": 5,
                "itemName1": "鉱物性生産品"
            }, {
                "itemCode1": 6,
                "itemName1": "化学工業（類似の工業を含む。）の生産品"
            }, {
                "itemCode1": 8,
                "itemName1": "皮革及び毛皮並びにこれらの製品、動物用装着具並びに旅行用具、ハンドバッグその他これらに類する容器並びに腸の製品"
            }, {
                "itemCode1": 9,
                "itemName1": "木材及びその製品、木炭、コルク及びその製品並びにわら、エスパルトその他の組物材料の製品並びにかご細工物及び枝条細工物"
            }, {
                "itemCode1": 10,
                "itemName1": "木材パルプ、繊維素繊維を原料とするその他のパルプ、古紙並びに紙及び板紙並びにこれらの製品"
            }, {
                "itemCode1": 15,
                "itemName1": "卑金属及びその製品"
            }, {
                "itemCode1": 16,
                "itemName1": "機械類及び電気機器並びにこれらの部分品並びに録音機、音声再生機並びにテレビジョンの映像及び音声の記録用又は再生用の機器並びにこれらの部分品及び附属品"
            }, {
                "itemCode1": 7,
                "itemName1": "プラスチック及びゴム並びにこれらの製品"
            }, {
                "itemCode1": 11,
                "itemName1": "紡織用繊維及びその製品"
            }, {
                "itemCode1": 12,
                "itemName1": "履物、帽子、傘、つえ、シートステッキ及びむち並びにこれらの部分品、調製羽毛、羽毛製品、造花並びに人髪製品"
            }, {
                "itemCode1": 13,
                "itemName1": "石、プラスター、セメント、石綿、雲母その他これらに類する材料の製品、陶磁製品並びにガラス及びその製品"
            }, {
                "itemCode1": 14,
                "itemName1": "天然又は養殖の真珠、貴石、半貴石、貴金属及び貴金属を張つた金属並びにこれらの製品、身辺用模造細貨類並びに貨幣"
            }, {
                "itemCode1": 17,
                "itemName1": "車両、航空機、船舶及び輸送機器関連品"
            }, {
                "itemCode1": 20,
                "itemName1": "雑品"
            }, {
                "itemCode1": 21,
                "itemName1": "美術品、収集品及びこつとう"
            }, {
                "itemCode1": 2,
                "itemName1": "植物性生産品"
            }, {
                "itemCode1": 18,
                "itemName1": "光学機器、写真用機器、映画用機器、測定機器、検査機器、精密機器、医療用機器、時計及び楽器並びにこれらの部分品及び附属品"
            }, {
                "itemCode1": 19,
                "itemName1": "武器及び銃砲弾並びにこれらの部分品及び附属品"
            }]
        }
        actual = self.resaspy.trade_info_item_types.broad()
        self.assertEqual( expected, actual )

    def test_trade_info_item_types_middle( self ):
        expected = {
            "message": None,
            "result": [{
                "itemCode1": 20,
                "itemName1": "雑品",
                "itemCode2": 94,
                "itemName2": "家具、寝具、マットレス、マットレスサポート、クッションその他これらに類する詰物をした物品並びにランプその他の照明器具（他の類に該当するものを除く。）及びイルミネーションサイン、発光ネームプレートその他これらに類する物品並びにプレハブ建築物"
            }, {
                "itemCode1": 20,
                "itemName1": "雑品",
                "itemCode2": 95,
                "itemName2": "がん具、遊戯用具及び運動用具並びにこれらの部分品及び附属品"
            }, {
                "itemCode1": 20,
                "itemName1": "雑品",
                "itemCode2": 96,
                "itemName2": "雑品"
            }]
        }
        actual = self.resaspy.trade_info_item_types.middle( 20 )
        self.assertEqual( expected, actual )

    def test_trade_info_item_types_narrow( self ):
        expected = {
            "message": None,
            "result": [{
                "itemCode1": 6,
                "itemName1": "化学工業（類似の工業を含む。）の生産品",
                "itemCode2": 33,
                "itemName2": "精油、レジノイド、調製香料及び化粧品類",
                "itemCode3": 3301,
                "itemName3": "精油（コンクリートのもの及びアブソリュートのものを含むものとし、テルペンを除いてあるかないかを問わない。）、レジノイド、オレオレジン抽出物、精油のコンセントレート（冷浸法又は温浸法により得たもので、油脂、ろうその他これらに類する物品を媒質としているものに限る。）、精油からテルペンを除く際に生ずるテルペン系副産物並びに精油のアキュアスディスチレート及びアキュアスソリューション"
            }, {
                "itemCode1": 6,
                "itemName1": "化学工業（類似の工業を含む。）の生産品",
                "itemCode2": 33,
                "itemName2": "精油、レジノイド、調製香料及び化粧品類",
                "itemCode3": 3302,
                "itemName3": "香気性物質の混合物及び一以上の香気性物質をもととした混合物（アルコール溶液を含むものとし、工業において原材料として使用する種類のものに限る。）並びに香気性物質をもととしたその他の調製品（飲料製造に使用する種類のものに限る。）"
            }, {
                "itemCode1": 6,
                "itemName1": "化学工業（類似の工業を含む。）の生産品",
                "itemCode2": 33,
                "itemName2": "精油、レジノイド、調製香料及び化粧品類",
                "itemCode3": 3303,
                "itemName3": "香水類及びオーデコロン類"
            }, {
                "itemCode1": 6,
                "itemName1": "化学工業（類似の工業を含む。）の生産品",
                "itemCode2": 33,
                "itemName2": "精油、レジノイド、調製香料及び化粧品類",
                "itemCode3": 3304,
                "itemName3": "美容用、メーキャップ用又は皮膚の手入れ用の調製品（日焼止め用又は日焼け用の調製品を含むものとし、医薬品を除く。）及びマニキュア用又はペディキュア用の調製品"
            }, {
                "itemCode1": 6,
                "itemName1": "化学工業（類似の工業を含む。）の生産品",
                "itemCode2": 33,
                "itemName2": "精油、レジノイド、調製香料及び化粧品類",
                "itemCode3": 3305,
                "itemName3": "頭髪用の調製品"
            }, {
                "itemCode1": 6,
                "itemName1": "化学工業（類似の工業を含む。）の生産品",
                "itemCode2": 33,
                "itemName2": "精油、レジノイド、調製香料及び化粧品類",
                "itemCode3": 3306,
                "itemName3": "口腔衛生用の調製品（義歯定着用のペースト及び粉を含む。）及び小売用の包装にした歯間清掃用の糸（デンタルフロス）"
            }, {
                "itemCode1": 6,
                "itemName1": "化学工業（類似の工業を含む。）の生産品",
                "itemCode2": 33,
                "itemName2": "精油、レジノイド、調製香料及び化粧品類",
                "itemCode3": 3307,
                "itemName3": "ひげそり前用、ひげそり用又はひげそり後用の調製品、身体用の防臭剤、浴用の調製品、脱毛剤その他の調製香料及び化粧品類（他の項に該当するものを除く。）並びに調製した室内防臭剤（芳香を付けてあるかないか又は消毒作用を有するか有しないかを問わない。）"
            }]
        }
        actual = self.resaspy.trade_info_item_types.narrow( 6, 33 )
        self.assertEqual( expected, actual )

class IndustryTest( unittest.TestCase ):
    def setUp( self ):
        api_key = os.environ['RESAS_API_KEY']
        self.resaspy = Resaspy( api_key )
        #self.maxDiff = None

    def test_industry_patent_list( self ):
        expected = {
            "message": None,
            "result": {
                "data": [{
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "分離；混合",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.69377,
                    "lng": 139.76566
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "繊維；紙",
                    "patentSubject": "繊維または他に分類されない可とう性材料",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "化学；冶金",
                    "patentSubject": "化学",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.67117,
                    "lng": 139.74861
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "化学；冶金",
                    "patentSubject": "化学",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65344,
                    "lng": 139.75871
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "化学；冶金",
                    "patentSubject": "化学",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13203",
                    "lat": 35.70667,
                    "lng": 139.58998
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "運輸",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65344,
                    "lng": 139.75871
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "機械工学；照明；加熱；武器；爆破",
                    "patentSubject": "照明；加熱",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65381,
                    "lng": 139.76218
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13107",
                    "lat": 35.70867,
                    "lng": 139.7993
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "成形",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65381,
                    "lng": 139.76218
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "機械工学；照明；加熱；武器；爆破",
                    "patentSubject": "工学一般",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.67117,
                    "lng": 139.74861
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "化学；冶金",
                    "patentSubject": "冶金",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.68323,
                    "lng": 139.76898
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "運輸",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.66722,
                    "lng": 139.76012
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13102",
                    "lat": 35.6768,
                    "lng": 139.77051
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "原子核工学",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.64986,
                    "lng": 139.75769
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "生活必需品",
                    "patentSubject": "健康；人命救助；娯楽",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13102",
                    "lat": 35.68356,
                    "lng": 139.77293
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.64986,
                    "lng": 139.75769
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "成形",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13104",
                    "lat": 35.68811,
                    "lng": 139.69333
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "機械工学；照明；加熱；武器；爆破",
                    "patentSubject": "工学一般",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65381,
                    "lng": 139.76218
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13116",
                    "lat": 35.72914,
                    "lng": 139.71938
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "生活必需品",
                    "patentSubject": "健康；人命救助；娯楽",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13112",
                    "lat": 35.65895,
                    "lng": 139.67662
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.67316,
                    "lng": 139.74036
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13113",
                    "lat": 35.64289,
                    "lng": 139.7155
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "分離；混合",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13120",
                    "lat": 35.73478,
                    "lng": 139.59947
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.64986,
                    "lng": 139.75769
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65344,
                    "lng": 139.75871
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13104",
                    "lat": 35.68811,
                    "lng": 139.69333
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13104",
                    "lat": 35.68811,
                    "lng": 139.69333
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13104",
                    "lat": 35.68811,
                    "lng": 139.69333
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "生活必需品",
                    "patentSubject": "農業",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13112",
                    "lat": 35.64193,
                    "lng": 139.63748
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "化学；冶金",
                    "patentSubject": "化学",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13113",
                    "lat": 35.64289,
                    "lng": 139.7155
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "運輸",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13116",
                    "lat": 35.72914,
                    "lng": 139.71938
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "生活必需品",
                    "patentSubject": "健康；人命救助；娯楽",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "原子核工学",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65344,
                    "lng": 139.75871
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13104",
                    "lat": 35.69272,
                    "lng": 139.72961
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "化学；冶金",
                    "patentSubject": "冶金",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.64986,
                    "lng": 139.75769
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "原子核工学",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "化学；冶金",
                    "patentSubject": "冶金",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.68543,
                    "lng": 139.7701
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "機械工学；照明；加熱；武器；爆破",
                    "patentSubject": "機関またはポンプ",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65381,
                    "lng": 139.76218
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "運輸",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.6922,
                    "lng": 139.76866
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65417,
                    "lng": 139.74568
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "成形",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.68323,
                    "lng": 139.76898
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "成形",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.68323,
                    "lng": 139.76898
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.68323,
                    "lng": 139.76898
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "運輸",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13102",
                    "lat": 35.6872,
                    "lng": 139.78755
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "地中もしくは岩石の削孔；採鉱",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13209",
                    "lat": 35.56055,
                    "lng": 139.45753
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "分離；混合",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.62663,
                    "lng": 139.74193
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "生活必需品",
                    "patentSubject": "健康；人命救助；娯楽",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13113",
                    "lat": 35.64289,
                    "lng": 139.7155
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.64986,
                    "lng": 139.75769
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.64986,
                    "lng": 139.75769
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13101",
                    "lat": 35.67316,
                    "lng": 139.74036
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13104",
                    "lat": 35.68811,
                    "lng": 139.69333
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "化学；冶金",
                    "patentSubject": "化学",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13113",
                    "lat": 35.64289,
                    "lng": 139.7155
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.62663,
                    "lng": 139.74193
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.62663,
                    "lng": 139.74193
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "固定構造物",
                    "patentSubject": "建造物",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13102",
                    "lat": 35.67825,
                    "lng": 139.77568
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "成形",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13102",
                    "lat": 35.67825,
                    "lng": 139.77568
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.64986,
                    "lng": 139.75769
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "物理学",
                    "patentSubject": "器械",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "処理操作；運輸",
                    "patentSubject": "運輸",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13116",
                    "lat": 35.72914,
                    "lng": 139.71938
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "生活必需品",
                    "patentSubject": "健康；人命救助；娯楽",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13113",
                    "lat": 35.64289,
                    "lng": 139.7155
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13116",
                    "lat": 35.72914,
                    "lng": 139.71938
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }, {
                    "applyNo": "-",
                    "patentName": "-",
                    "patentHolder": "-",
                    "patentSection": "電気",
                    "patentSubject": "電気",
                    "fiClass": "-",
                    "applyDate": "-",
                    "jointlyFlg": "0",
                    "patentHolderId": "",
                    "prefCode": "13",
                    "cityCode": "13103",
                    "lat": 35.65142,
                    "lng": 139.75742
                }]
            }
        }
        actual = self.resaspy.industry.patent.list( 2014, 1, 13, '-', '-', 1, 1, 0 )
        self.assertEqual( expected, actual )

    def test_industry_export_from_to( self ):
        expected = {
            "message": None,
            "result": {
                "data": [{
                    "from": {
                        "lat": 35.6939726,
                        "lng": 139.7536284,
                        "customsCode1": "0",
                        "customsName1": "",
                        "customsCode2": "0",
                        "customsName2": ""
                    },
                    "to": [{
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "103",
                        "countryName": "大韓民国",
                        "lat": 37.566535,
                        "lng": 126.9779692,
                        "value": 64251326070
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "105",
                        "countryName": "中華人民共和国",
                        "lat": 39.90403,
                        "lng": 116.407526,
                        "value": 252681818260
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "106",
                        "countryName": "台湾",
                        "lat": 25.091075,
                        "lng": 121.5598345,
                        "value": 64802857110
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "107",
                        "countryName": "モンゴル",
                        "lat": 47.921378,
                        "lng": 106.90554,
                        "value": 4839300
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "108",
                        "countryName": "香港",
                        "lat": 22.278381,
                        "lng": 114.174287,
                        "value": 241270180900
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "110",
                        "countryName": "ベトナム",
                        "lat": 21.0333333,
                        "lng": 105.85,
                        "value": 11621906410
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "111",
                        "countryName": "タイ",
                        "lat": 13.7278956,
                        "lng": 100.5241235,
                        "value": 20529193030
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "112",
                        "countryName": "シンガポール",
                        "lat": 1.2800945,
                        "lng": 103.8509491,
                        "value": 43779188520
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "113",
                        "countryName": "マレーシア",
                        "lat": 3.139003,
                        "lng": 101.686855,
                        "value": 24275156060
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "116",
                        "countryName": "ブルネイ",
                        "lat": 4.8902778,
                        "lng": 114.9422222,
                        "value": 1942280
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "117",
                        "countryName": "フィリピン",
                        "lat": 14.5995124,
                        "lng": 120.9842195,
                        "value": 15841583870
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "118",
                        "countryName": "インドネシア",
                        "lat": -6.211544,
                        "lng": 106.845172,
                        "value": 5893835980
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "120",
                        "countryName": "カンボジア",
                        "lat": 11.558831,
                        "lng": 104.917445,
                        "value": 42153970
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "121",
                        "countryName": "ラオス",
                        "lat": 17.962769,
                        "lng": 102.614429,
                        "value": 3311470
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "122",
                        "countryName": "ミャンマー",
                        "lat": 19.750018,
                        "lng": 96.100449,
                        "value": 185882790
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "123",
                        "countryName": "インド",
                        "lat": 28.635308,
                        "lng": 77.22496,
                        "value": 28947915530
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "124",
                        "countryName": "パキスタン",
                        "lat": 33.718151,
                        "lng": 73.060547,
                        "value": 1087265620
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "125",
                        "countryName": "スリランカ",
                        "lat": 6.883201,
                        "lng": 79.906982,
                        "value": 76535320
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "126",
                        "countryName": "モルディブ",
                        "lat": 4.174199,
                        "lng": 73.510915,
                        "value": 339160
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "127",
                        "countryName": "バングラデシュ",
                        "lat": 23.709921,
                        "lng": 90.407143,
                        "value": 258388690
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "128",
                        "countryName": "東ティモール",
                        "lat": -8.558458,
                        "lng": 125.578151,
                        "value": 17810
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "129",
                        "countryName": "マカオ",
                        "lat": 22.198745,
                        "lng": 113.543873,
                        "value": 786336260
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "130",
                        "countryName": "アフガニスタン",
                        "lat": 34.528455,
                        "lng": 69.1717029,
                        "value": 37015690
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "131",
                        "countryName": "ネパール",
                        "lat": 27.7,
                        "lng": 85.3333333,
                        "value": 57259410
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "132",
                        "countryName": "ブータン",
                        "lat": 27.44261,
                        "lng": 89.667328,
                        "value": 89230
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "133",
                        "countryName": "イラン",
                        "lat": 35.696216,
                        "lng": 51.422945,
                        "value": 259072990
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "134",
                        "countryName": "イラク",
                        "lat": 33.325,
                        "lng": 44.422,
                        "value": 5637380
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "135",
                        "countryName": "バーレーン",
                        "lat": 26.2166667,
                        "lng": 50.5833333,
                        "value": 22358010
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "137",
                        "countryName": "サウジアラビア",
                        "lat": 24.7116667,
                        "lng": 46.7241667,
                        "value": 1001454500
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "138",
                        "countryName": "クウェート",
                        "lat": 29.3697222,
                        "lng": 47.9783333,
                        "value": 150663150
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "140",
                        "countryName": "カタール",
                        "lat": 25.280282,
                        "lng": 51.522476,
                        "value": 51872550
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "141",
                        "countryName": "オマーン",
                        "lat": 23.61,
                        "lng": 58.54,
                        "value": 89105040
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "143",
                        "countryName": "イスラエル",
                        "lat": 31.768319,
                        "lng": 35.21371,
                        "value": 89471870
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "144",
                        "countryName": "ヨルダン",
                        "lat": 31.9565783,
                        "lng": 35.9456951,
                        "value": 45397980
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "145",
                        "countryName": "シリア",
                        "lat": 33.5111,
                        "lng": 36.3064,
                        "value": 27512690
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "146",
                        "countryName": "レバノン",
                        "lat": 33.8886289,
                        "lng": 35.4954794,
                        "value": 11096150
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "147",
                        "countryName": "アラブ首長国連邦",
                        "lat": 24.4666667,
                        "lng": 54.3666667,
                        "value": 1712427870
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "149",
                        "countryName": "イエメン",
                        "lat": 15.352029,
                        "lng": 44.207456,
                        "value": 56906890
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "150",
                        "countryName": "アゼルバイジャン",
                        "lat": 40.4349504,
                        "lng": 49.8676232,
                        "value": 329090
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "151",
                        "countryName": "アルメニア",
                        "lat": 40.183333,
                        "lng": 44.516667,
                        "value": 106960
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "152",
                        "countryName": "ウズベキスタン",
                        "lat": 41.2666667,
                        "lng": 69.2166667,
                        "value": 724280
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "153",
                        "countryName": "カザフスタン",
                        "lat": 51.1666667,
                        "lng": 71.4333333,
                        "value": 9481660
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "154",
                        "countryName": "キルギス",
                        "lat": 42.870022,
                        "lng": 74.587883,
                        "value": 409720
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "155",
                        "countryName": "タジキスタン",
                        "lat": 38.5366667,
                        "lng": 68.78,
                        "value": 556320
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "156",
                        "countryName": "トルクメニスタン",
                        "lat": 37.9333333,
                        "lng": 58.3666667,
                        "value": 888300
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "157",
                        "countryName": "ジョージア",
                        "lat": 41.709981,
                        "lng": 44.792998,
                        "value": 1239790
                    }, {
                        "regionCode": "1",
                        "regionName": "アジア州",
                        "countryCode": "158",
                        "countryName": "ヨルダン川西岸及びガザ",
                        "lat": 31.522561,
                        "lng": 34.453593,
                        "value": 18530
                    }]
                }]
            }
        }
        actual = self.resaspy.industry.export.from_to( 2010, 1, 2, 1, 1, '-', '-', '-', '-', '-', '-' )
        self.assertEqual( expected, actual )

    def test_industry_global_market_per_pref(self):
        expected = {
            "message": None,
            "result": {
                "11": 1,
                "12": 1,
                "13": 6,
                "23": 1,
                "27": 4,
                "28": 2,
                "34": 1,
                "37": 1,
                "sicName": "製造業",
                "sicCode": "E",
                "simcName": "なめし革・同製品・毛皮製造業",
                "simcCode": "20"
            }
        }
        actual = self.resaspy.industry.global_market.per_pref( 2010, 1, 1, '-', 'E', 20 )
        self.assertEqual( expected, actual )

    def test_industry_power_for_industry( self ):
        expected = {
            "message": None,
            "result": {
                "prefName": "埼玉県",
                "prefCode": 11,
                "sicCode": "",
                "sicName": "",
                "data": [{
                    "simcCode": "06",
                    "simcName": "総合工事業",
                    "value": 0.9794,
                    "employee": 1.2356,
                    "labor": 0.5201
                }, {
                    "simcCode": "07",
                    "simcName": "職別工事業(設備工事業を除く)",
                    "value": 0.498,
                    "employee": 0.8222,
                    "labor": 0.3975
                }, {
                    "simcCode": "08",
                    "simcName": "設備工事業",
                    "value": 0.5912,
                    "employee": 0.5013,
                    "labor": 0.774
                }, {
                    "simcCode": "09",
                    "simcName": "食料品製造業",
                    "value": 0.1082,
                    "employee": 0.1696,
                    "labor": 0.4187
                }, {
                    "simcCode": "11",
                    "simcName": "繊維工業",
                    "value": 0.2061,
                    "employee": 0.5293,
                    "labor": 0.2556
                }, {
                    "simcCode": "12",
                    "simcName": "木材・木製品製造業（家具を除く）",
                    "value": 0.0718,
                    "employee": 0.546,
                    "labor": 0.0863
                }, {
                    "simcCode": "15",
                    "simcName": "印刷・同関連業",
                    "value": 6.3702,
                    "employee": 3.9061,
                    "labor": 1.0701
                }, {
                    "simcCode": "21",
                    "simcName": "窯業・土石製品製造業",
                    "value": 3.7875,
                    "employee": 2.4708,
                    "labor": 1.0058
                }, {
                    "simcCode": "24",
                    "simcName": "金属製品製造業",
                    "value": 6.0179,
                    "employee": 4.5205,
                    "labor": 0.8735
                }, {
                    "simcCode": "25",
                    "simcName": "はん用機械器具製造業",
                    "value": 0.5088,
                    "employee": 0.5982,
                    "labor": 0.5581
                }, {
                    "simcCode": "26",
                    "simcName": "生産用機械器具製造業",
                    "value": 0.3752,
                    "employee": 0.3989,
                    "labor": 0.6171
                }, {
                    "simcCode": "31",
                    "simcName": "輸送用機械器具製造業",
                    "value": 0.518,
                    "employee": 0.8799,
                    "labor": 0.3863
                }, {
                    "simcCode": "32",
                    "simcName": "その他の製造業",
                    "value": 0.8986,
                    "employee": 1.1716,
                    "labor": 0.5033
                }, {
                    "simcCode": "44",
                    "simcName": "道路貨物運送業",
                    "value": 2.3494,
                    "employee": 1.4363,
                    "labor": 1.0733
                }, {
                    "simcCode": "52",
                    "simcName": "飲食料品卸売業",
                    "value": 1.0915,
                    "employee": 1.085,
                    "labor": 0.6601
                }, {
                    "simcCode": "53",
                    "simcName": "建築材料，鉱物・金属材料等卸売業",
                    "value": 1.1763,
                    "employee": 1.3668,
                    "labor": 0.5647
                }, {
                    "simcCode": "55",
                    "simcName": "その他の卸売業",
                    "value": 0.4336,
                    "employee": 0.3509,
                    "labor": 0.8109
                }, {
                    "simcCode": "57",
                    "simcName": "織物・衣服・身の回り品小売業",
                    "value": 0.4812,
                    "employee": 0.3808,
                    "labor": 0.8292
                }, {
                    "simcCode": "58",
                    "simcName": "飲食料品小売業",
                    "value": 3.9467,
                    "employee": 4.213,
                    "labor": 0.6147
                }, {
                    "simcCode": "59",
                    "simcName": "機械器具小売業",
                    "value": 0.8187,
                    "employee": 1.0637,
                    "labor": 0.505
                }, {
                    "simcCode": "60",
                    "simcName": "その他の小売業",
                    "value": 1.5472,
                    "employee": 1.3829,
                    "labor": 0.7341
                }, {
                    "simcCode": "61",
                    "simcName": "無店舗小売業",
                    "value": 0.1122,
                    "employee": 0.3003,
                    "labor": 0.2452
                }, {
                    "simcCode": "68",
                    "simcName": "不動産取引業",
                    "value": 0.2123,
                    "employee": 0.3216,
                    "labor": 0.4332
                }, {
                    "simcCode": "69",
                    "simcName": "不動産賃貸業・管理業",
                    "value": 0.3278,
                    "employee": 0.6457,
                    "labor": 0.3331
                }, {
                    "simcCode": "72",
                    "simcName": "専門サービス業（他に分類されないもの）",
                    "value": 0.4748,
                    "employee": 0.6368,
                    "labor": 0.4892
                }, {
                    "simcCode": "74",
                    "simcName": "技術サービス業（他に分類されないもの）",
                    "value": 0.4818,
                    "employee": 0.9289,
                    "labor": 0.3403
                }, {
                    "simcCode": "75",
                    "simcName": "宿泊業",
                    "value": 1.2506,
                    "employee": 0.8896,
                    "labor": 0.9224
                }, {
                    "simcCode": "76",
                    "simcName": "飲食店",
                    "value": 0.5045,
                    "employee": 0.462,
                    "labor": 0.7165
                }, {
                    "simcCode": "77",
                    "simcName": "持ち帰り・配達飲食サービス業",
                    "value": 2.5214,
                    "employee": 1.4847,
                    "labor": 1.1144
                }, {
                    "simcCode": "78",
                    "simcName": "洗濯・理容・美容・浴場業",
                    "value": 2.0643,
                    "employee": 1.252,
                    "labor": 1.0819
                }, {
                    "simcCode": "79",
                    "simcName": "その他の生活関連サービス業",
                    "value": 3.6616,
                    "employee": 1.6579,
                    "labor": 1.4492
                }, {
                    "simcCode": "80",
                    "simcName": "娯楽業",
                    "value": 12.5509,
                    "employee": 1.5275,
                    "labor": 5.3915
                }, {
                    "simcCode": "82",
                    "simcName": "その他の教育，学習支援業",
                    "value": 0.6954,
                    "employee": 1.1976,
                    "labor": 0.381
                }, {
                    "simcCode": "83",
                    "simcName": "医療業",
                    "value": 0.7619,
                    "employee": 0.6677,
                    "labor": 0.7487
                }, {
                    "simcCode": "85",
                    "simcName": "社会保険・社会福祉・介護事業",
                    "value": 1.7206,
                    "employee": 1.5204,
                    "labor": 0.7426
                }, {
                    "simcCode": "88",
                    "simcName": "廃棄物処理業",
                    "value": 0.2636,
                    "employee": 0.7494,
                    "labor": 0.2308
                }, {
                    "simcCode": "89",
                    "simcName": "自動車整備業",
                    "value": 3.7915,
                    "employee": 3.1138,
                    "labor": 0.799
                }, {
                    "simcCode": "93",
                    "simcName": "政治・経済・文化団体",
                    "value": 0.1203,
                    "employee": 0.9557,
                    "labor": 0.0826
                }, {
                    "simcCode": "94",
                    "simcName": "宗教",
                    "value": 5.9395,
                    "employee": 1.5436,
                    "labor": 2.5249
                }]
            }
        }
        actual = self.resaspy.industry.power.for_industry( 2012, 11, 11362, '-')
        self.assertEqual( expected, actual )
    
    def test_industry_power_for_area(self):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "sicCode": "E",
                "sicName": "製造業",
                "simcCode": "20",
                "simcName": "なめし革・同製品・毛皮製造業",
                "prefectures": [{
                    "prefCode": 1,
                    "prefName": "北海道",
                    "value": 0.30848
                }, {
                    "prefCode": 3,
                    "prefName": "岩手県",
                    "value": 2.21218
                }, {
                    "prefCode": 4,
                    "prefName": "宮城県",
                    "value": 0.42222
                }, {
                    "prefCode": 5,
                    "prefName": "秋田県",
                    "value": 3.44696
                }, {
                    "prefCode": 6,
                    "prefName": "山形県",
                    "value": 4.54647
                }, {
                    "prefCode": 7,
                    "prefName": "福島県",
                    "value": 2.53323
                }, {
                    "prefCode": 8,
                    "prefName": "茨城県",
                    "value": 0.36249
                }, {
                    "prefCode": 9,
                    "prefName": "栃木県",
                    "value": 0.50879
                }, {
                    "prefCode": 10,
                    "prefName": "群馬県",
                    "value": 0.07647
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "value": 2.03076
                }, {
                    "prefCode": 12,
                    "prefName": "千葉県",
                    "value": 0.69098
                }, {
                    "prefCode": 13,
                    "prefName": "東京都",
                    "value": 1.01792
                }, {
                    "prefCode": 14,
                    "prefName": "神奈川県",
                    "value": 0.07523
                }, {
                    "prefCode": 15,
                    "prefName": "新潟県",
                    "value": 0.68978
                }, {
                    "prefCode": 16,
                    "prefName": "富山県",
                    "value": 0.60879
                }, {
                    "prefCode": 17,
                    "prefName": "石川県",
                    "value": 0.10467
                }, {
                    "prefCode": 18,
                    "prefName": "福井県",
                    "value": 0.13289
                }, {
                    "prefCode": 19,
                    "prefName": "山梨県",
                    "value": 0.64245
                }, {
                    "prefCode": 20,
                    "prefName": "長野県",
                    "value": 0.39188
                }, {
                    "prefCode": 21,
                    "prefName": "岐阜県",
                    "value": 0.17422
                }, {
                    "prefCode": 22,
                    "prefName": "静岡県",
                    "value": 0.32037
                }, {
                    "prefCode": 23,
                    "prefName": "愛知県",
                    "value": 0.53636
                }, {
                    "prefCode": 24,
                    "prefName": "三重県",
                    "value": 0.11075
                }, {
                    "prefCode": 25,
                    "prefName": "滋賀県",
                    "value": 0.28875
                }, {
                    "prefCode": 26,
                    "prefName": "京都府",
                    "value": 1.28648
                }, {
                    "prefCode": 27,
                    "prefName": "大阪府",
                    "value": 1.45303
                }, {
                    "prefCode": 28,
                    "prefName": "兵庫県",
                    "value": 5.51896
                }, {
                    "prefCode": 29,
                    "prefName": "奈良県",
                    "value": 3.46389
                }, {
                    "prefCode": 30,
                    "prefName": "和歌山県",
                    "value": 1.11721
                }, {
                    "prefCode": 31,
                    "prefName": "鳥取県",
                    "value": 1.0373
                }, {
                    "prefCode": 32,
                    "prefName": "島根県",
                    "value": 0.57766
                }, {
                    "prefCode": 33,
                    "prefName": "岡山県",
                    "value": 0.35362
                }, {
                    "prefCode": 34,
                    "prefName": "広島県",
                    "value": 0.54478
                }, {
                    "prefCode": 36,
                    "prefName": "徳島県",
                    "value": 0.50626
                }, {
                    "prefCode": 37,
                    "prefName": "香川県",
                    "value": 1.98932
                }, {
                    "prefCode": 38,
                    "prefName": "愛媛県",
                    "value": 0.42018
                }, {
                    "prefCode": 39,
                    "prefName": "高知県",
                    "value": 0.03391
                }, {
                    "prefCode": 40,
                    "prefName": "福岡県",
                    "value": 0.08926
                }, {
                    "prefCode": 41,
                    "prefName": "佐賀県",
                    "value": 1.18518
                }, {
                    "prefCode": 43,
                    "prefName": "熊本県",
                    "value": 0.07152
                }, {
                    "prefCode": 44,
                    "prefName": "大分県",
                    "value": 0.28302
                }, {
                    "prefCode": 46,
                    "prefName": "鹿児島県",
                    "value": 0.02459
                }, {
                    "prefCode": 47,
                    "prefName": "沖縄県",
                    "value": 0.06266
                }],
                "cities": [{
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11101",
                    "cityName": "さいたま市",
                    "value": 0.51211
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11201",
                    "cityName": "川越市",
                    "value": 0.29315
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11202",
                    "cityName": "熊谷市",
                    "value": 1.60434
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11203",
                    "cityName": "川口市",
                    "value": 8.11285
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11206",
                    "cityName": "行田市",
                    "value": 4.90313
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11210",
                    "cityName": "加須市",
                    "value": 0.17733
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11212",
                    "cityName": "東松山市",
                    "value": 0.28689
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11214",
                    "cityName": "春日部市",
                    "value": 2.35491
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11216",
                    "cityName": "羽生市",
                    "value": 1.05551
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11217",
                    "cityName": "鴻巣市",
                    "value": 2.60627
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11221",
                    "cityName": "草加市",
                    "value": 8.57537
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11222",
                    "cityName": "越谷市",
                    "value": 6.6653
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11223",
                    "cityName": "蕨市",
                    "value": 6.32599
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11224",
                    "cityName": "戸田市",
                    "value": 0.03354
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11227",
                    "cityName": "朝霞市",
                    "value": 2.08742
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11234",
                    "cityName": "八潮市",
                    "value": 9.59932
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11237",
                    "cityName": "三郷市",
                    "value": 12.25184
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11240",
                    "cityName": "幸手市",
                    "value": 8.04544
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11243",
                    "cityName": "吉川市",
                    "value": 0.09595
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11385",
                    "cityName": "上里町",
                    "value": 0.48466
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11464",
                    "cityName": "杉戸町",
                    "value": 0.53496
                }, {
                    "prefCode": 11,
                    "prefName": "埼玉県",
                    "cityCode": "11465",
                    "cityName": "松伏町",
                    "value": 1.21321
                }]
            }
        }
        actual = self.resaspy.industry.power.for_area( 2012, 11, 1, 1, 'E', 20) 
        self.assertEqual( expected, actual )
    
    def test_industry_power_for_manufacturer_establishments( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 11,
                "prefName": "埼玉県",
                "sicCode": "E",
                "sicName": "製造業",
                "simcCode": "20",
                "simcName": "なめし革・同製品・毛皮製造業",
                "establishments": [{
                    "label": "退出",
                    "data": [{
                        "year": 1990,
                        "value": 10802.6712,
                        "labor": 894.752,
                        "employee": 12.0734
                    }, {
                        "year": 1994,
                        "value": 10789.8851,
                        "labor": 810.1032,
                        "employee": 13.3191
                    }, {
                        "year": 2005,
                        "value": 6345.4444,
                        "labor": 719.2569,
                        "employee": 8.8222
                    }, {
                        "year": 2004,
                        "value": 6719.7872,
                        "labor": 679.2043,
                        "employee": 9.8936
                    }, {
                        "year": 1995,
                        "value": 10217.4575,
                        "labor": 824.5531,
                        "employee": 12.3915
                    }, {
                        "year": 2002,
                        "value": 6882.5692,
                        "labor": 692.5186,
                        "employee": 9.9385
                    }, {
                        "year": 1996,
                        "value": 10083.215,
                        "labor": 799.3036,
                        "employee": 12.615
                    }, {
                        "year": 2001,
                        "value": 7896.5181,
                        "labor": 728.2344,
                        "employee": 10.8434
                    }, {
                        "year": 1997,
                        "value": 7192.2045,
                        "labor": 631.0209,
                        "employee": 11.3977
                    }, {
                        "year": 2000,
                        "value": 6565.8144,
                        "labor": 600.2677,
                        "employee": 10.9381
                    }, {
                        "year": 1998,
                        "value": 6205.3015,
                        "labor": 573.7056,
                        "employee": 10.8162
                    }, {
                        "year": 2008,
                        "value": 19323,
                        "labor": 1380.2143,
                        "employee": 14
                    }, {
                        "year": 2006,
                        "value": 8078.1034,
                        "labor": 988.4599,
                        "employee": 8.1724
                    }, {
                        "year": 1993,
                        "value": 9624.4361,
                        "labor": 757.426,
                        "employee": 12.7068
                    }, {
                        "year": 1991,
                        "value": 9528.8515,
                        "labor": 730.265,
                        "employee": 13.0485
                    }, {
                        "year": 2009,
                        "value": 5493.5,
                        "labor": 955.3913,
                        "employee": 5.75
                    }, {
                        "year": 1999,
                        "value": 6710.72,
                        "labor": 623.2095,
                        "employee": 10.768
                    }, {
                        "year": 1992,
                        "value": 10513.4692,
                        "labor": 764.2353,
                        "employee": 13.7568
                    }, {
                        "year": 2007,
                        "value": 11194.3571,
                        "labor": 1234.0236,
                        "employee": 9.0714
                    }, {
                        "year": 2003,
                        "value": 5882.6,
                        "labor": 678.2872,
                        "employee": 8.6727
                    }]
                }, {
                    "label": "継続",
                    "data": [{
                        "year": 1993,
                        "value": 14723.15,
                        "labor": 657.7729,
                        "employee": 22.3833
                    }, {
                        "year": 2004,
                        "value": 16380.1455,
                        "labor": 753.2676,
                        "employee": 21.7455
                    }, {
                        "year": 1992,
                        "value": 14373.7627,
                        "labor": 668.8107,
                        "employee": 21.4915
                    }, {
                        "year": 2006,
                        "value": 13433.8966,
                        "labor": 676.947,
                        "employee": 19.8448
                    }, {
                        "year": 2000,
                        "value": 14872.8167,
                        "labor": 740.5552,
                        "employee": 20.0833
                    }, {
                        "year": 2010,
                        "value": 8567.623,
                        "labor": 516.9387,
                        "employee": 16.5738
                    }, {
                        "year": 2005,
                        "value": 15701.2807,
                        "labor": 727.6203,
                        "employee": 21.5789
                    }, {
                        "year": 1991,
                        "value": 14892,
                        "labor": 698.9432,
                        "employee": 21.3065
                    }, {
                        "year": 2008,
                        "value": 9731.3667,
                        "labor": 519.9305,
                        "employee": 18.7167
                    }, {
                        "year": 2007,
                        "value": 13175.9322,
                        "labor": 663.2935,
                        "employee": 19.8644
                    }, {
                        "year": 2009,
                        "value": 8958.4918,
                        "labor": 534.7045,
                        "employee": 16.7541
                    }, {
                        "year": 1990,
                        "value": 14318.1333,
                        "labor": 652.8024,
                        "employee": 21.9333
                    }, {
                        "year": 1994,
                        "value": 16267.7193,
                        "labor": 694.0569,
                        "employee": 23.4386
                    }, {
                        "year": 2003,
                        "value": 15950.5789,
                        "labor": 753.8831,
                        "employee": 21.1579
                    }, {
                        "year": 1999,
                        "value": 15082.6724,
                        "labor": 716.4578,
                        "employee": 21.0517
                    }, {
                        "year": 1998,
                        "value": 17188.5763,
                        "labor": 783.7141,
                        "employee": 21.9322
                    }, {
                        "year": 1996,
                        "value": 19847.0877,
                        "labor": 841.1033,
                        "employee": 23.5965
                    }, {
                        "year": 1997,
                        "value": 19214.4912,
                        "labor": 830.9757,
                        "employee": 23.1228
                    }, {
                        "year": 2002,
                        "value": 16152.2407,
                        "labor": 746.1257,
                        "employee": 21.6481
                    }, {
                        "year": 2001,
                        "value": 16517.1356,
                        "labor": 800.0911,
                        "employee": 20.6441
                    }, {
                        "year": 1995,
                        "value": 18082.678,
                        "labor": 785.6244,
                        "employee": 23.0169
                    }]
                }, {
                    "label": "全事業所",
                    "data": [{
                        "year": 1996,
                        "value": 10848.4114,
                        "labor": 790.7954,
                        "employee": 13.7184
                    }, {
                        "year": 1999,
                        "value": 8016.1078,
                        "labor": 642.5307,
                        "employee": 12.4758
                    }, {
                        "year": 2008,
                        "value": 7843.4873,
                        "labor": 592.3858,
                        "employee": 13.2405
                    }, {
                        "year": 2003,
                        "value": 8436.8065,
                        "labor": 669.7593,
                        "employee": 12.5968
                    }, {
                        "year": 1990,
                        "value": 11295.493,
                        "labor": 839.4636,
                        "employee": 13.4556
                    }, {
                        "year": 1997,
                        "value": 8564.0507,
                        "labor": 677.0724,
                        "employee": 12.6486
                    }, {
                        "year": 2009,
                        "value": 6865.1504,
                        "labor": 524.4486,
                        "employee": 13.0902
                    }, {
                        "year": 1998,
                        "value": 7864.9791,
                        "labor": 632.4598,
                        "employee": 12.4355
                    }, {
                        "year": 2007,
                        "value": 9926.8662,
                        "labor": 725.2294,
                        "employee": 13.6879
                    }, {
                        "year": 2000,
                        "value": 7884.6295,
                        "labor": 643.8003,
                        "employee": 12.247
                    }, {
                        "year": 1994,
                        "value": 10733.4386,
                        "labor": 756.7174,
                        "employee": 14.1842
                    }, {
                        "year": 1992,
                        "value": 9930.2488,
                        "labor": 720.4746,
                        "employee": 13.7829
                    }, {
                        "year": 2002,
                        "value": 8615.7112,
                        "labor": 667.6908,
                        "employee": 12.9037
                    }, {
                        "year": 2004,
                        "value": 9180.2381,
                        "labor": 670.5565,
                        "employee": 13.6905
                    }, {
                        "year": 1993,
                        "value": 9623.3943,
                        "labor": 720.5787,
                        "employee": 13.3551
                    }, {
                        "year": 2005,
                        "value": 8706.0402,
                        "labor": 669.3995,
                        "employee": 13.0057
                    }, {
                        "year": 1995,
                        "value": 10664.0517,
                        "labor": 788.7754,
                        "employee": 13.5198
                    }, {
                        "year": 2001,
                        "value": 8546.3712,
                        "labor": 676.5016,
                        "employee": 12.6332
                    }, {
                        "year": 2006,
                        "value": 9441.2273,
                        "labor": 721.2049,
                        "employee": 13.0909
                    }, {
                        "year": 1991,
                        "value": 9507.2393,
                        "labor": 707.8499,
                        "employee": 13.4312
                    }, {
                        "year": 2010,
                        "value": 7171.7742,
                        "labor": 515.8353,
                        "employee": 13.9032
                    }]
                }, {
                    "label": "参入",
                    "data": [{
                        "year": 2004,
                        "value": 6154.6552,
                        "labor": 540.8636,
                        "employee": 11.3793
                    }, {
                        "year": 2010,
                        "value": 5820.2381,
                        "labor": 514.2707,
                        "employee": 11.3175
                    }, {
                        "year": 1999,
                        "value": 6598.2857,
                        "labor": 446.2609,
                        "employee": 14.7857
                    }, {
                        "year": 2009,
                        "value": 5252.3276,
                        "labor": 492.1405,
                        "employee": 10.6724
                    }, {
                        "year": 2000,
                        "value": 5513.65,
                        "labor": 481.5415,
                        "employee": 11.45
                    }, {
                        "year": 2005,
                        "value": 5563.5313,
                        "labor": 533.0329,
                        "employee": 10.4375
                    }, {
                        "year": 1995,
                        "value": 3474.1111,
                        "labor": 529.9492,
                        "employee": 6.5556
                    }, {
                        "year": 2001,
                        "value": 5608.4762,
                        "labor": 452.9923,
                        "employee": 12.381
                    }, {
                        "year": 2006,
                        "value": 8481.2895,
                        "labor": 760.1156,
                        "employee": 11.1579
                    }, {
                        "year": 2007,
                        "value": 9195.549,
                        "labor": 777.733,
                        "employee": 11.8235
                    }, {
                        "year": 2002,
                        "value": 5079.64,
                        "labor": 463.4708,
                        "employee": 10.96
                    }, {
                        "year": 2003,
                        "value": 6421.069,
                        "labor": 571.1994,
                        "employee": 11.2414
                    }, {
                        "year": 2008,
                        "value": 7532.4694,
                        "labor": 627.7058,
                        "employee": 12
                    }, {
                        "year": 1992,
                        "value": 2304.2,
                        "labor": 480.0417,
                        "employee": 4.8
                    }, {
                        "year": 1991,
                        "value": 3019.6,
                        "labor": 718.9524,
                        "employee": 4.2
                    }, {
                        "year": 1997,
                        "value": 2285,
                        "labor": 397.3913,
                        "employee": 5.75
                    }, {
                        "year": 1996,
                        "value": 2602.625,
                        "labor": 424.9184,
                        "employee": 6.125
                    }, {
                        "year": 1994,
                        "value": 2981.3333,
                        "labor": 511.0857,
                        "employee": 5.8333
                    }, {
                        "year": 1998,
                        "value": 6348.375,
                        "labor": 412.9024,
                        "employee": 15.375
                    }, {
                        "year": 1993,
                        "value": 1685,
                        "labor": 324.0385,
                        "employee": 5.2
                    }]
                }]
            }
        }
        actual = self.resaspy.industry.power.for_manufacturer_establishments( 11, 'E', 20 )
        self.assertEqual( expected, actual )

class AgricultureTest( unittest.TestCase ):
    def setUp( self ):
        api_key = os.environ['RESAS_API_KEY']
        self.resaspy = Resaspy( api_key )
        #self.maxDiff = None

    def test_agriculture_sales_ship_value( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "oldCityCode": "03",
                "oldCityName": "国神村",
                "years": [{
                    "year": 2005,
                    "data": [{
                        "code": "A",
                        "label": "農協",
                        "sales": 2375
                    }, {
                        "code": "B",
                        "label": "農協以外の集出荷団体",
                        "sales": 0
                    }, {
                        "code": "C",
                        "label": "卸売市場",
                        "sales": 4675
                    }, {
                        "code": "D",
                        "label": "小売業者",
                        "sales": 0
                    }, {
                        "code": "E",
                        "label": "食品製造業・外食産業",
                        "sales": 0
                    }, {
                        "code": "F",
                        "label": "消費者に直接販売",
                        "sales": 2575
                    }, {
                        "code": "G",
                        "label": "その他",
                        "sales": 4000
                    }]
                }, {
                    "year": 2010,
                    "data": [{
                        "code": "A",
                        "label": "農協",
                        "sales": 900
                    }, {
                        "code": "B",
                        "label": "農協以外の集出荷団体",
                        "sales": 4000
                    }, {
                        "code": "C",
                        "label": "卸売市場",
                        "sales": 4000
                    }, {
                        "code": "D",
                        "label": "小売業者",
                        "sales": 0
                    }, {
                        "code": "E",
                        "label": "食品製造業・外食産業",
                        "sales": 0
                    }, {
                        "code": "F",
                        "label": "消費者に直接販売",
                        "sales": 2125
                    }, {
                        "code": "G",
                        "label": "その他",
                        "sales": 0
                    }]
                }]
            }
        }
        actual = self.resaspy.agriculture.sales.ship_value( 11, 11362, '03' )
        self.assertEqual( expected, actual )

    def test_agriculture_sales_ship_ratio(self):
        expected = {
            "message": None,
            "result": {
                "prefCode": "",
                "prefName": "",
                "cityCode": "",
                "cityName": "",
                "oldCityCode": "",
                "oldCityName": "",
                "matter": "3",
                "years": [{
                    "year": "2005",
                    "label": "全国平均",
                    "data": [{
                        "code": "A",
                        "label": "農協",
                        "sales": 467866775
                    }, {
                        "code": "B",
                        "label": "農協以外の集出荷団体",
                        "sales": 81982150
                    }, {
                        "code": "C",
                        "label": "卸売市場",
                        "sales": 96682925
                    }, {
                        "code": "D",
                        "label": "小売業者",
                        "sales": 34535500
                    }, {
                        "code": "E",
                        "label": "食品製造業・外食産業",
                        "sales": 22823200
                    }, {
                        "code": "F",
                        "label": "消費者に直接販売",
                        "sales": 29158875
                    }, {
                        "code": "G",
                        "label": "その他",
                        "sales": 49502675
                    }]
                }, {
                    "year": "2010",
                    "label": "全国平均",
                    "data": [{
                        "code": "A",
                        "label": "農協",
                        "sales": 417196200
                    }, {
                        "code": "B",
                        "label": "農協以外の集出荷団体",
                        "sales": 90014950
                    }, {
                        "code": "C",
                        "label": "卸売市場",
                        "sales": 78843875
                    }, {
                        "code": "D",
                        "label": "小売業者",
                        "sales": 38055200
                    }, {
                        "code": "E",
                        "label": "食品製造業・外食産業",
                        "sales": 23527125
                    }, {
                        "code": "F",
                        "label": "消費者に直接販売",
                        "sales": 32486275
                    }, {
                        "code": "G",
                        "label": "その他",
                        "sales": 34196625
                    }]
                }]
            }
        }
        actual = self.resaspy.agriculture.sales.ship_ratio( 11, 11362, '03', 3 )
        self.assertEqual( expected, actual )

    def test_agriculture_land_for_stacked( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "",
                "prefName": "",
                "cityCode": "",
                "cityName": "",
                "oldCityCode": "",
                "oldCityName": "",
                "dispType": 1,
                "agriculturalLandType": 3,
                "matter": 3,
                "label": "全国平均",
                "years": [{
                    "year": 2005,
                    "selfOwnedValue": 137957587
                }, {
                    "year": 2010,
                    "selfOwnedValue": 137025797
                }]
            }
        }
        actual = self.resaspy.agriculture.land.for_stacked( 11, 11362, '03', 1, 1, 3,  3 ) #? sectionCode ??
        self.assertEqual( expected, actual )

    def test_agriculture_land_ratio( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "",
                "prefName": "",
                "cityCode": "",
                "cityName": "",
                "oldCityCode": "",
                "oldCityName": "",
                "matter": "3",
                "legend": [{
                    "label": "0.3ha未満",
                    "code": "1"
                }, {
                    "label": "0.3ha以上1.0ha未満",
                    "code": "2"
                }, {
                    "label": "1ha以上10ha未満",
                    "code": "3"
                }, {
                    "label": "10ha以上30ha未満",
                    "code": "4"
                }, {
                    "label": "30ha以上",
                    "code": "5"
                }],
                "years": [{
                    "year": "2005",
                    "label": "全国平均",
                    "data": [{
                        "label": "0.3ha未満",
                        "code": "1",
                        "value": 3.05
                    }, {
                        "label": "0.3ha以上1.0ha未満",
                        "code": "2",
                        "value": 54.2
                    }, {
                        "label": "1ha以上10ha未満",
                        "code": "3",
                        "value": 40.59
                    }, {
                        "label": "10ha以上30ha未満",
                        "code": "4",
                        "value": 1.48
                    }, {
                        "label": "30ha以上",
                        "code": "5",
                        "value": 0.65
                    }]
                }, {
                    "year": "2010",
                    "label": "全国平均",
                    "data": [{
                        "label": "0.3ha未満",
                        "code": "1",
                        "value": 3.18
                    }, {
                        "label": "0.3ha以上1.0ha未満",
                        "code": "2",
                        "value": 52.35
                    }, {
                        "label": "1ha以上10ha未満",
                        "code": "3",
                        "value": 41.51
                    }, {
                        "label": "10ha以上30ha未満",
                        "code": "4",
                        "value": 1.99
                    }, {
                        "label": "30ha以上",
                        "code": "5",
                        "value": 0.95
                    }]
                }]
            }
        }
        actual = self.resaspy.agriculture.land.ratio( 11, 11362, '03', 3 )
        self.assertEqual( expected, actual )

    def test_agriculture_land_for_mobility( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "oldCityCode": "03",
                "oldCityName": "国神村",
                "agriculturalLandType": "3",
                "matter": "3",
                "label": "全国平均",
                "data": [{
                    "year": 2005,
                    "value": 0.2238
                }, {
                    "year": 2010,
                    "value": 0.2439
                }]
            }
        }
        actual = self.resaspy.agriculture.land.for_mobility( 11, 11362, '03', 3, 3 )
        self.assertEqual( expected, actual )

    def test_agriculture_land_for_abandonment( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "oldCityCode": "03",
                "oldCityName": "国神村",
                "matter": "3",
                "label": "全国平均",
                "data": [{
                    "year": 2005,
                    "value": 0.0966
                }, {
                    "year": 2010,
                    "value": 0.1056
                }]
            }
        }
        actual = self.resaspy.agriculture.land.for_abandonment( 11, 11362, '03', 3 )
        self.assertEqual( expected, actual )

    def test_agriculture_all_for_stacked( self ):
        expected = {
            "message": None,
            "result": {
                "year": 2010,
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "oldCityCode": "03",
                "oldCityName": "国神村",
                "data": [{
                    "sectionCode": "A",
                    "sectionName": "稲作",
                    "value": 90
                }, {
                    "sectionCode": "B",
                    "sectionName": "麦類作",
                    "value": 0
                }, {
                    "sectionCode": "C",
                    "sectionName": "雑穀・いも類・豆類",
                    "value": 25
                }, {
                    "sectionCode": "D",
                    "sectionName": "工芸農作物",
                    "value": 0
                }, {
                    "sectionCode": "E",
                    "sectionName": "露地野菜",
                    "value": 620
                }, {
                    "sectionCode": "F",
                    "sectionName": "施設野菜",
                    "value": 0
                }, {
                    "sectionCode": "G",
                    "sectionName": "果樹類",
                    "value": 1600
                }, {
                    "sectionCode": "H",
                    "sectionName": "花き・花木",
                    "value": 4000
                }, {
                    "sectionCode": "I",
                    "sectionName": "その他の作物",
                    "value": 4600
                }, {
                    "sectionCode": "J",
                    "sectionName": "酪農",
                    "value": 0
                }, {
                    "sectionCode": "K",
                    "sectionName": "肉用牛",
                    "value": 0
                }, {
                    "sectionCode": "L",
                    "sectionName": "養豚",
                    "value": 0
                }, {
                    "sectionCode": "M",
                    "sectionName": "養鶏",
                    "value": 0
                }, {
                    "sectionCode": "N",
                    "sectionName": "養蚕",
                    "value": 0
                }, {
                    "sectionCode": "O",
                    "sectionName": "その他の畜産",
                    "value": 0
                }, {
                    "sectionCode": "P",
                    "sectionName": "農作業請負収入",
                    "value": 90
                }]
            }
        }
        actual = self.resaspy.agriculture.all.for_stacked( 2010, 11, 11362, '03')
        self.assertEqual( expected, actual )

    def test_agriculture_crops_working_days( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "oldCityCode": "03",
                "oldCityName": "国神村",
                "label": "埼玉県皆野町(国神村)",
                "years": [{
                    "year": 2005,
                    "value": 14733
                }, {
                    "year": 2010,
                    "value": 12236
                }]
            }
        }
        actual = self.resaspy.agriculture.crops.working_days( 11, 11362, '03')
        self.assertEqual( expected, actual )

    def test_agriculture_crops_sales( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "oldCityCode": "03",
                "oldCityName": "国神村",
                "label": "埼玉県皆野町(国神村)",
                "years": [{
                    "year": 2005,
                    "value": 0.9248
                }, {
                    "year": 2010,
                    "value": 0.9031
                }]
            }
        }
        actual = self.resaspy.agriculture.crops.sales( 11, 11362, '03')
        self.assertEqual( expected, actual )

    def test_agriculture_crops_farmers_age_structure( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "oldCityCode": "",
                "oldCityName": "",
                "farmersType": 1,
                "genderType": 3,
                "matter": 3,
                "years": [{
                    "year": "2005",
                    "unit": "%",
                    "legend": [{
                        "label": "15-24歳",
                        "code": "1"
                    }, {
                        "label": "25-34歳",
                        "code": "2"
                    }, {
                        "label": "35-44歳",
                        "code": "3"
                    }, {
                        "label": "45-54歳",
                        "code": "4"
                    }, {
                        "label": "55-64歳",
                        "code": "5"
                    }, {
                        "label": "65-74歳",
                        "code": "6"
                    }, {
                        "label": "75歳以上",
                        "code": "7"
                    }],
                    "label": "埼玉県皆野町",
                    "data": [{
                        "label": "15-24歳",
                        "code": "1",
                        "value": 0
                    }, {
                        "label": "25-34歳",
                        "code": "2",
                        "value": 12.5
                    }, {
                        "label": "35-44歳",
                        "code": "3",
                        "value": 0
                    }, {
                        "label": "45-54歳",
                        "code": "4",
                        "value": 0
                    }, {
                        "label": "55-64歳",
                        "code": "5",
                        "value": 25
                    }, {
                        "label": "65-74歳",
                        "code": "6",
                        "value": 50
                    }, {
                        "label": "75歳以上",
                        "code": "7",
                        "value": 12.5
                    }]
                }, {
                    "year": "2010",
                    "unit": "%",
                    "legend": [{
                        "label": "15-24歳",
                        "code": "1"
                    }, {
                        "label": "25-34歳",
                        "code": "2"
                    }, {
                        "label": "35-44歳",
                        "code": "3"
                    }, {
                        "label": "45-54歳",
                        "code": "4"
                    }, {
                        "label": "55-64歳",
                        "code": "5"
                    }, {
                        "label": "65-74歳",
                        "code": "6"
                    }, {
                        "label": "75歳以上",
                        "code": "7"
                    }],
                    "label": "埼玉県皆野町",
                    "data": [{
                        "label": "15-24歳",
                        "code": "1",
                        "value": 0
                    }, {
                        "label": "25-34歳",
                        "code": "2",
                        "value": 0
                    }, {
                        "label": "35-44歳",
                        "code": "3",
                        "value": 0
                    }, {
                        "label": "45-54歳",
                        "code": "4",
                        "value": 0
                    }, {
                        "label": "55-64歳",
                        "code": "5",
                        "value": 20
                    }, {
                        "label": "65-74歳",
                        "code": "6",
                        "value": 60
                    }, {
                        "label": "75歳以上",
                        "code": "7",
                        "value": 20
                    }]
                }]
            }
        }
        actual = self.resaspy.agriculture.crops.farmers_age_structure( 11, 11362, '03', 1, 3, 3 ) # oldCityCode, genderType ???
        self.assertEqual( expected, actual )

    def test_agriculture_crops_farmers_average_age( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "oldCityCode": "",
                "oldCityName": "",
                "farmersType": 1,
                "genderType": 3,
                "matter": 3,
                "label": "埼玉県皆野町",
                "years": [{
                    "year": 2005,
                    "value": 63.8
                }, {
                    "year": 2010,
                    "value": 70
                }]
            }
        }
        actual = self.resaspy.agriculture.crops.farmers_average_age( 11, 11362, '03', 1, 3, 3 ) # oldCityCode, genderType ???
        self.assertEqual( expected, actual )

    def test_agriculture_crops_related_business( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "",
                "cityName": "",
                "oldCityCode": "",
                "oldCityName": "",
                "years": [{
                    "year": "2005",
                    "data": [{
                        "code": "1",
                        "label": "農産物の加工",
                        "value": 436
                    }, {
                        "code": "2",
                        "label": "消費者に直接販売",
                        "value": 14180
                    }, {
                        "code": "3",
                        "label": "貸農園、体験農園等",
                        "value": 207
                    }, {
                        "code": "4",
                        "label": "観光農園",
                        "value": 306
                    }, {
                        "code": "5",
                        "label": "農家民宿",
                        "value": 5
                    }, {
                        "code": "6",
                        "label": "農家レストラン",
                        "value": 22
                    }, {
                        "code": "7",
                        "label": "海外への進出",
                        "value": None
                    }, {
                        "code": "8",
                        "label": "その他",
                        "value": 522
                    }]
                }, {
                    "year": "2010",
                    "data": [{
                        "code": "1",
                        "label": "農産物の加工",
                        "value": 683
                    }, {
                        "code": "2",
                        "label": "消費者に直接販売",
                        "value": 11684
                    }, {
                        "code": "3",
                        "label": "貸農園、体験農園等",
                        "value": 319
                    }, {
                        "code": "4",
                        "label": "観光農園",
                        "value": 344
                    }, {
                        "code": "5",
                        "label": "農家民宿",
                        "value": 3
                    }, {
                        "code": "6",
                        "label": "農家レストラン",
                        "value": 30
                    }, {
                        "code": "7",
                        "label": "海外への進出",
                        "value": 16
                    }, {
                        "code": "8",
                        "label": "その他",
                        "value": 85
                    }]
                }]
            }
        }
        actual = self.resaspy.agriculture.crops.related_business( 11, '-', '-' )
        self.assertEqual( expected, actual )

    def test_agriculture_crops_average_of_corporate( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "oldCityCode": "",
                "oldCityName": "",
                "matter": 3,
                "label": "埼玉県皆野町",
                "years": [{
                    "year": 2005,
                    "value": 2.38
                }, {
                    "year": 2010,
                    "value": 1.1
                }]
            }
        }
        actual = self.resaspy.agriculture.crops.average_of_corporate( 11, 11362, '-', 3 ) #matter , oldCityCode
        self.assertEqual( expected, actual )

    def test_forestry_income_for_stacked( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "label": "埼玉県皆野町",
                "years": [{
                    "year": 2005,
                    "sales": 75,
                    "income": 100000
                }, {
                    "year": 2010,
                    "sales": 7500,
                    "income": 100000
                }]
            }
        }
        actual = self.resaspy.forestry.income.for_stacked( 11, 11362)
        self.assertEqual( expected, actual )

    def test_forestry_income_for_sales( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "label": "埼玉県皆野町",
                "years": [{
                    "year": 2005,
                    "value": 2.5862
                }, {
                    "year": 2010,
                    "value": 625
                }]
            }
        }
        actual = self.resaspy.forestry.income.for_sales( 11, 11362)
        self.assertEqual( expected, actual )

    def test_forestry_income_for_contract_revenue( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "label": "埼玉県皆野町",
                "years": [{
                    "year": 2005,
                    "value": 3448.2759
                }, {
                    "year": 2010,
                    "value": 8333.3333
                }]
            }
        }
        actual = self.resaspy.forestry.income.for_contract_revenue( 11, 11362)
        self.assertEqual( expected, actual )

    def test_forestry_income_for_sales_ratio( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "",
                "prefName": "",
                "cityCode": "",
                "cityName": "",
                "matter": 3,
                "legend": [{
                    "label": "100万円未満",
                    "code": "1"
                }, {
                    "label": "100万円以上1,000万円未満",
                    "code": "2"
                }, {
                    "label": "1,000万円以上5,000万円未満",
                    "code": "3"
                }, {
                    "label": "5,000万円以上1億円未満",
                    "code": "4"
                }, {
                    "label": "1億円以上",
                    "code": "5"
                }],
                "years": [{
                    "year": "2005",
                    "label": "全国平均",
                    "data": [{
                        "label": "100万円未満",
                        "code": "1",
                        "value": 64.72
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2",
                        "value": 29.5
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3",
                        "value": 4.1
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4",
                        "value": 0.98
                    }, {
                        "label": "1億円以上",
                        "code": "5",
                        "value": 0.71
                    }]
                }, {
                    "year": "2010",
                    "label": "全国平均",
                    "data": [{
                        "label": "100万円未満",
                        "code": "1",
                        "value": 70.44
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2",
                        "value": 22.86
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3",
                        "value": 4.62
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4",
                        "value": 1.11
                    }, {
                        "label": "1億円以上",
                        "code": "5",
                        "value": 0.97
                    }]
                }]
            }
        }
        actual = self.resaspy.forestry.income.for_sales_ratio( '-', '-', 3)
        self.assertEqual( expected, actual )

    def test_forestry_income_for_contract_revenue_ratio( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "",
                "prefName": "",
                "cityCode": "",
                "cityName": "",
                "matter": 3,
                "legend": [{
                    "label": "100万円未満",
                    "code": "1"
                }, {
                    "label": "100万円以上1,000万円未満",
                    "code": "2"
                }, {
                    "label": "1,000万円以上5,000万円未満",
                    "code": "3"
                }, {
                    "label": "5,000万円以上1億円未満",
                    "code": "4"
                }, {
                    "label": "1億円以上",
                    "code": "5"
                }],
                "years": [{
                    "year": "2005",
                    "label": "全国平均",
                    "data": [{
                        "label": "100万円未満",
                        "code": "1",
                        "value": 28.44
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2",
                        "value": 37.63
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3",
                        "value": 21.64
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4",
                        "value": 6.25
                    }, {
                        "label": "1億円以上",
                        "code": "5",
                        "value": 6.04
                    }]
                }, {
                    "year": "2010",
                    "label": "全国平均",
                    "data": [{
                        "label": "100万円未満",
                        "code": "1",
                        "value": 43.43
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2",
                        "value": 29.95
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3",
                        "value": 15.2
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4",
                        "value": 5.04
                    }, {
                        "label": "1億円以上",
                        "code": "5",
                        "value": 6.38
                    }]
                }]
            }
        }
        actual = self.resaspy.forestry.income.for_contract_revenue_ratio( '-', '-', 3)
        self.assertEqual( expected, actual )

    def test_forestry_income_all_fortfolio( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "areaType": 1,
                "allcount": 12,
                "data": [{
                    "sectionCode": "H",
                    "sectionName": "林作業請負（利用間伐）",
                    "value": 1
                }, {
                    "sectionCode": "G",
                    "sectionName": "林作業請負（切捨間伐）",
                    "value": 1
                }, {
                    "sectionCode": "F",
                    "sectionName": "林作業請負（下刈りなど）",
                    "value": 1
                }, {
                    "sectionCode": "E",
                    "sectionName": "林作業請負（植林）",
                    "value": 1
                }, {
                    "sectionCode": "D",
                    "sectionName": "特用林産物",
                    "value": 1
                }, {
                    "sectionCode": "B",
                    "sectionName": "用材（素材）",
                    "value": 1
                }, {
                    "sectionCode": "J",
                    "sectionName": "林作業請負（主伐（立木買い））",
                    "value": 0
                }, {
                    "sectionCode": "I",
                    "sectionName": "林作業請負（主伐（請負））",
                    "value": 0
                }, {
                    "sectionCode": "C",
                    "sectionName": "ほだ木用原木",
                    "value": 0
                }, {
                    "sectionCode": "A",
                    "sectionName": "用材（立木）",
                    "value": 0
                }],
                "otherscount": 0
            }
        }
        actual = self.resaspy.forestry.income.all_portfolio( 2010, 11, 11362, 1 )
        self.assertEqual( expected, actual )

    def test_forestry_income_all_for_stacked( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "11",
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "years": [{
                    "year": 2005,
                    "data": [{
                        "sectionCode": "A",
                        "sectionName": "用材（立木）",
                        "value": 0
                    }, {
                        "sectionCode": "B",
                        "sectionName": "用材（素材）",
                        "value": 0
                    }, {
                        "sectionCode": "C",
                        "sectionName": "ほだ木用原木",
                        "value": 2
                    }, {
                        "sectionCode": "D",
                        "sectionName": "特用林産物",
                        "value": 1
                    }, {
                        "sectionCode": "E",
                        "sectionName": "林作業請負（植林）",
                        "value": 1
                    }, {
                        "sectionCode": "F",
                        "sectionName": "林作業請負（下刈りなど）",
                        "value": 1
                    }, {
                        "sectionCode": "I",
                        "sectionName": "林作業請負（主伐（請負））",
                        "value": 0
                    }, {
                        "sectionCode": "J",
                        "sectionName": "林作業請負（主伐（立木買い））",
                        "value": 0
                    }]
                }, {
                    "year": 2010,
                    "data": [{
                        "sectionCode": "A",
                        "sectionName": "用材（立木）",
                        "value": 0
                    }, {
                        "sectionCode": "B",
                        "sectionName": "用材（素材）",
                        "value": 1
                    }, {
                        "sectionCode": "C",
                        "sectionName": "ほだ木用原木",
                        "value": 0
                    }, {
                        "sectionCode": "D",
                        "sectionName": "特用林産物",
                        "value": 1
                    }, {
                        "sectionCode": "E",
                        "sectionName": "林作業請負（植林）",
                        "value": 1
                    }, {
                        "sectionCode": "F",
                        "sectionName": "林作業請負（下刈りなど）",
                        "value": 1
                    }, {
                        "sectionCode": "G",
                        "sectionName": "林作業請負（切捨間伐）",
                        "value": 1
                    }, {
                        "sectionCode": "H",
                        "sectionName": "林作業請負（利用間伐）",
                        "value": 1
                    }, {
                        "sectionCode": "I",
                        "sectionName": "林作業請負（主伐（請負））",
                        "value": 0
                    }, {
                        "sectionCode": "J",
                        "sectionName": "林作業請負（主伐（立木買い））",
                        "value": 0
                    }]
                }]
            }
        }
        actual = self.resaspy.forestry.income.all_for_stacked( 11, 11362 )
        self.assertEqual( expected, actual )

    def test_fishery_sea_staple( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "13",
                "prefName": "東京都",
                "cityCode": "",
                "cityName": "",
                "years": [{
                    "year": 2008,
                    "data": [{
                        "sectionCode": "01",
                        "sectionName": "底びき網",
                        "value": 0
                    }, {
                        "sectionCode": "02",
                        "sectionName": "船びき網",
                        "value": 0
                    }, {
                        "sectionCode": "03",
                        "sectionName": "まき網",
                        "value": 7
                    }, {
                        "sectionCode": "04",
                        "sectionName": "刺網",
                        "value": 281
                    }, {
                        "sectionCode": "05",
                        "sectionName": "さんま棒受網",
                        "value": 1
                    }, {
                        "sectionCode": "06",
                        "sectionName": "大型定置網",
                        "value": 0
                    }, {
                        "sectionCode": "07",
                        "sectionName": "さけ定置網",
                        "value": 0
                    }, {
                        "sectionCode": "08",
                        "sectionName": "小型定置網",
                        "value": 3
                    }, {
                        "sectionCode": "09",
                        "sectionName": "その他の網漁業",
                        "value": 28
                    }, {
                        "sectionCode": "10",
                        "sectionName": "はえ縄",
                        "value": 14
                    }, {
                        "sectionCode": "11",
                        "sectionName": "釣",
                        "value": 688
                    }, {
                        "sectionCode": "12",
                        "sectionName": "小型捕鯨",
                        "value": 0
                    }, {
                        "sectionCode": "13",
                        "sectionName": "潜水器漁業",
                        "value": 85
                    }, {
                        "sectionCode": "14",
                        "sectionName": "採貝・採藻",
                        "value": 183
                    }, {
                        "sectionCode": "15",
                        "sectionName": "その他の漁業",
                        "value": 102
                    }, {
                        "sectionCode": "16",
                        "sectionName": "海面養殖",
                        "value": 6
                    }]
                }, {
                    "year": 2013,
                    "data": [{
                        "sectionCode": "01",
                        "sectionName": "底びき網",
                        "value": 0
                    }, {
                        "sectionCode": "02",
                        "sectionName": "船びき網",
                        "value": 0
                    }, {
                        "sectionCode": "03",
                        "sectionName": "まき網",
                        "value": 4
                    }, {
                        "sectionCode": "04",
                        "sectionName": "刺網",
                        "value": 225
                    }, {
                        "sectionCode": "05",
                        "sectionName": "さんま棒受網",
                        "value": 1
                    }, {
                        "sectionCode": "06",
                        "sectionName": "大型定置網",
                        "value": 0
                    }, {
                        "sectionCode": "07",
                        "sectionName": "さけ定置網",
                        "value": 0
                    }, {
                        "sectionCode": "08",
                        "sectionName": "小型定置網",
                        "value": 4
                    }, {
                        "sectionCode": "09",
                        "sectionName": "その他の網漁業",
                        "value": 20
                    }, {
                        "sectionCode": "10",
                        "sectionName": "はえ縄",
                        "value": 14
                    }, {
                        "sectionCode": "11",
                        "sectionName": "釣",
                        "value": 698
                    }, {
                        "sectionCode": "12",
                        "sectionName": "小型捕鯨",
                        "value": 0
                    }, {
                        "sectionCode": "13",
                        "sectionName": "潜水器漁業",
                        "value": 72
                    }, {
                        "sectionCode": "14",
                        "sectionName": "採貝・採藻",
                        "value": 205
                    }, {
                        "sectionCode": "15",
                        "sectionName": "その他の漁業",
                        "value": 109
                    }, {
                        "sectionCode": "16",
                        "sectionName": "海面養殖",
                        "value": 6
                    }]
                }]
            }
        }
        actual = self.resaspy.fishery.sea.staple( 13, '-' )
        self.assertEqual( expected, actual )

    def test_fishery_sea_total_sales( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "13",
                "prefName": "東京都",
                "cityCode": "",
                "cityName": "",
                "years": [{
                    "year": 2008,
                    "value": 930600
                }, {
                    "year": 2013,
                    "value": 599350
                }]
            }
        }
        actual = self.resaspy.fishery.sea.total_sales( 13, '-' )
        self.assertEqual( expected, actual )

    def test_fishery_sea_management_unit_sales( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "13",
                "prefName": "東京都",
                "cityCode": "",
                "cityName": "",
                "matter": "3",
                "years": [{
                    "year": 2008,
                    "value": 1391.0314
                }, {
                    "year": 2013,
                    "value": 992.3013
                }]
            }
        }
        actual = self.resaspy.fishery.sea.management_unit_sales( 13, '-', 3 )
        self.assertEqual( expected, actual )

    def test_fishery_sea_sales( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "",
                "prefName": "",
                "cityCode": "",
                "cityName": "",
                "matter": "3",
                "years": [{
                    "year": 2008,
                    "legend": [{
                        "label": "100万円未満",
                        "code": "1"
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2"
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3"
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4"
                    }, {
                        "label": "1億円以上",
                        "code": "5"
                    }],
                    "label": "全国平均",
                    "data": [{
                        "label": "100万円未満",
                        "code": "1",
                        "value": 29.91
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2",
                        "value": 51.04
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3",
                        "value": 14.98
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4",
                        "value": 2.22
                    }, {
                        "label": "1億円以上",
                        "code": "5",
                        "value": 1.85
                    }]
                }, {
                    "year": 2013,
                    "legend": [{
                        "label": "100万円未満",
                        "code": "1"
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2"
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3"
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4"
                    }, {
                        "label": "1億円以上",
                        "code": "5"
                    }],
                    "label": "全国平均",
                    "data": [{
                        "label": "100万円未満",
                        "code": "1",
                        "value": 32.29
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2",
                        "value": 50.17
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3",
                        "value": 13.79
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4",
                        "value": 2
                    }, {
                        "label": "1億円以上",
                        "code": "5",
                        "value": 1.75
                    }]
                }]
            }
        }
        actual = self.resaspy.fishery.sea.sales( 11, 11362, 3 )
        self.assertEqual( expected, actual )

    def test_fishery_sea_ship_value( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "13",
                "prefName": "東京都",
                "cityCode": "",
                "cityName": "",
                "years": [{
                    "year": 2008,
                    "data": [{
                        "label": "漁協の市場または荷捌き所",
                        "code": "1",
                        "sales": 369650
                    }, {
                        "label": "漁協以外の卸売市場",
                        "code": "2",
                        "sales": 43750
                    }, {
                        "label": "流通業者・加工業者",
                        "code": "3",
                        "sales": 483300
                    }, {
                        "label": "小売業者",
                        "code": "4",
                        "sales": 2050
                    }, {
                        "label": "生協",
                        "code": "5",
                        "sales": 0
                    }, {
                        "label": "直売所",
                        "code": "6",
                        "sales": 3600
                    }, {
                        "label": "自家販売",
                        "code": "7",
                        "sales": 19000
                    }, {
                        "label": "その他",
                        "code": "8",
                        "sales": 9250
                    }]
                }, {
                    "year": 2013,
                    "data": [{
                        "label": "漁協の市場または荷捌き所",
                        "code": "1",
                        "sales": 329700
                    }, {
                        "label": "漁協以外の卸売市場",
                        "code": "2",
                        "sales": 18100
                    }, {
                        "label": "流通業者・加工業者",
                        "code": "3",
                        "sales": 236600
                    }, {
                        "label": "小売業者",
                        "code": "4",
                        "sales": 4800
                    }, {
                        "label": "生協",
                        "code": "5",
                        "sales": 0
                    }, {
                        "label": "直売所",
                        "code": "6",
                        "sales": 0
                    }, {
                        "label": "自家販売",
                        "code": "7",
                        "sales": 1600
                    }, {
                        "label": "その他",
                        "code": "8",
                        "sales": 8550
                    }]
                }]
            }
        }
        actual = self.resaspy.fishery.sea.ship_value( 13, '-' )
        self.assertEqual( expected, actual )

    def test_fishery_sea_ship_ratio( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "13",
                "prefName": "東京都",
                "cityCode": "",
                "cityName": "",
                "matter": "3",
                "years": [{
                    "year": 2008,
                    "label": "東京都",
                    "data": [{
                        "label": "漁協の市場または荷捌き所",
                        "code": "1",
                        "value": 73.69
                    }, {
                        "label": "漁協以外の卸売市場",
                        "code": "2",
                        "value": 5.38
                    }, {
                        "label": "流通業者・加工業者",
                        "code": "3",
                        "value": 3.14
                    }, {
                        "label": "小売業者",
                        "code": "4",
                        "value": 1.05
                    }, {
                        "label": "生協",
                        "code": "5",
                        "value": 0
                    }, {
                        "label": "直売所",
                        "code": "6",
                        "value": 0.75
                    }, {
                        "label": "自家販売",
                        "code": "7",
                        "value": 15.7
                    }, {
                        "label": "その他",
                        "code": "8",
                        "value": 0.3
                    }]
                }, {
                    "year": 2013,
                    "label": "東京都",
                    "data": [{
                        "label": "漁協の市場または荷捌き所",
                        "code": "1",
                        "value": 82.12
                    }, {
                        "label": "漁協以外の卸売市場",
                        "code": "2",
                        "value": 3.48
                    }, {
                        "label": "流通業者・加工業者",
                        "code": "3",
                        "value": 4.97
                    }, {
                        "label": "小売業者",
                        "code": "4",
                        "value": 3.15
                    }, {
                        "label": "生協",
                        "code": "5",
                        "value": 0
                    }, {
                        "label": "直売所",
                        "code": "6",
                        "value": 0
                    }, {
                        "label": "自家販売",
                        "code": "7",
                        "value": 2.81
                    }, {
                        "label": "その他",
                        "code": "8",
                        "value": 3.48
                    }]
                }]
            }
        }
        actual = self.resaspy.fishery.sea.ship_ratio( 13, '-', 3 )
        self.assertEqual( expected, actual )

    def test_fishery_sea_aquaculture_total_sales( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "13",
                "prefName": "東京都",
                "cityCode": "",
                "cityName": "",
                "years": [{
                    "year": 2008,
                    "value": 9700
                }, {
                    "year": 2013,
                    "value": 171200
                }]
            }
        }
        actual = self.resaspy.fishery.sea.aquaculture_total_sales( 13, '-' )
        self.assertEqual( expected, actual )

    def test_fishery_sea_aquaculture_management_unit_sales( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "13",
                "prefName": "東京都",
                "cityCode": "",
                "cityName": "",
                "matter": "3",
                "years": [{
                    "year": 2008,
                    "value": 2425
                }, {
                    "year": 2013,
                    "value": 42800
                }]
            }
        }
        actual = self.resaspy.fishery.sea.aquaculture_management_unit_sales( 13, '-', 3 )
        self.assertEqual( expected, actual )

    def test_fishery_sea_aquaculture_sales( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": "",
                "prefName": "",
                "cityCode": "",
                "cityName": "",
                "matter": "3",
                "years": [{
                    "year": 2008,
                    "legend": [{
                        "label": "100万円未満",
                        "code": "1"
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2"
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3"
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4"
                    }, {
                        "label": "1億円以上",
                        "code": "5"
                    }],
                    "label": "全国平均",
                    "data": [{
                        "label": "100万円未満",
                        "code": "1",
                        "value": 15.38
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2",
                        "value": 46.54
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3",
                        "value": 30.48
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4",
                        "value": 4.57
                    }, {
                        "label": "1億円以上",
                        "code": "5",
                        "value": 3.03
                    }]
                }, {
                    "year": 2013,
                    "legend": [{
                        "label": "100万円未満",
                        "code": "1"
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2"
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3"
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4"
                    }, {
                        "label": "1億円以上",
                        "code": "5"
                    }],
                    "label": "全国平均",
                    "data": [{
                        "label": "100万円未満",
                        "code": "1",
                        "value": 17.08
                    }, {
                        "label": "100万円以上1,000万円未満",
                        "code": "2",
                        "value": 44.71
                    }, {
                        "label": "1,000万円以上5,000万円未満",
                        "code": "3",
                        "value": 30.2
                    }, {
                        "label": "5,000万円以上1億円未満",
                        "code": "4",
                        "value": 4.66
                    }, {
                        "label": "1億円以上",
                        "code": "5",
                        "value": 3.36
                    }]
                }]
            }
        }
        actual = self.resaspy.fishery.sea.aquaculture_sales( 11, 11362, 3 )
        self.assertEqual( expected, actual )

class TourismTest( unittest.TestCase ):
    def setUp( self ):
        api_key = os.environ['RESAS_API_KEY']
        self.resaspy = Resaspy( api_key )
        #self.maxDiff = None

    def test_tourism_foreigners_for_from( self ):
        expected = {
            "message": None,
            "result": {
                "year": 2012,
                "prefCode": "11",
                "prefName": "埼玉県",
                "purpose": 1,
                "changes": [{
                    "countryCode": "103",
                    "countryName": "大韓民国",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 2566
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 9563
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 7454
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 9710
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 8690
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 14877
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 11796
                    }]
                }, {
                    "countryCode": "105",
                    "countryName": "中華人民共和国",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 7098
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 4160
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 4576
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 4544
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 9035
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 10938
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 5316
                    }]
                }, {
                    "countryCode": "106",
                    "countryName": "台湾",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 3238
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 4394
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 3476
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 4352
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 5079
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 7929
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 6909
                    }]
                }, {
                    "countryCode": "108",
                    "countryName": "香港",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 280
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 1611
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 613
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 234
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 534
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 1221
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 1505
                    }]
                }, {
                    "countryCode": "111",
                    "countryName": "タイ",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 1696
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 1579
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 1482
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 1804
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 3269
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 2247
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 3643
                    }]
                }, {
                    "countryCode": "112",
                    "countryName": "シンガポール",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 610
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 569
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 0
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 714
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 219
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 736
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 842
                    }]
                }, {
                    "countryCode": "113",
                    "countryName": "マレーシア",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 401
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 342
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 1003
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 222
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 0
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 411
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 268
                    }]
                }, {
                    "countryCode": "123",
                    "countryName": "インド",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 595
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 652
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 420
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 230
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 278
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 825
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 325
                    }]
                }, {
                    "countryCode": "205",
                    "countryName": "英国",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 951
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 597
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 359
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 821
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 407
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 827
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 1151
                    }]
                }, {
                    "countryCode": "210",
                    "countryName": "フランス",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 145
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 1136
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 1278
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 811
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 720
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 1356
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 705
                    }]
                }, {
                    "countryCode": "213",
                    "countryName": "ドイツ",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 184
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 535
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 246
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 790
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 426
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 1297
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 783
                    }]
                }, {
                    "countryCode": "224",
                    "countryName": "ロシア",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 187
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 142
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 93
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 218
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 304
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 364
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 89
                    }]
                }, {
                    "countryCode": "302",
                    "countryName": "カナダ",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 150
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 1067
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 722
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 219
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 423
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 1278
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 536
                    }]
                }, {
                    "countryCode": "304",
                    "countryName": "アメリカ合衆国",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 1900
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 2445
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 2637
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 2343
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 4169
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 3458
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 2411
                    }]
                }, {
                    "countryCode": "601",
                    "countryName": "オーストラリア",
                    "data": [{
                        "year": 2011,
                        "quarter": 2,
                        "value": 151
                    }, {
                        "year": 2011,
                        "quarter": 3,
                        "value": 442
                    }, {
                        "year": 2011,
                        "quarter": 4,
                        "value": 1170
                    }, {
                        "year": 2012,
                        "quarter": 1,
                        "value": 276
                    }, {
                        "year": 2012,
                        "quarter": 2,
                        "value": 583
                    }, {
                        "year": 2012,
                        "quarter": 3,
                        "value": 342
                    }, {
                        "year": 2012,
                        "quarter": 4,
                        "value": 1364
                    }]
                }]
            }
        }
        actual = self.resaspy.tourism.foreigners.for_from( 2012, 11, 1 )
        self.assertEqual( expected, actual )

    def test_tourism_foreigners_for_to(self):
        expected = {
            "message": None,
            "result": {
                "year": 2014,
                "regionCode": "1",
                "regionName": "アジア州",
                "countryCode": "",
                "countryName": "",
                "purpose": 1,
                "prefCode": "11",
                "prefName": "埼玉県",
                "changes": [{
                    "prefCode": "11",
                    "prefName": "埼玉県",
                    "rank": "20",
                    "data": [{
                        "year": 2013,
                        "quarter": 1,
                        "value": 26266
                    }, {
                        "year": 2013,
                        "quarter": 2,
                        "value": 27141
                    }, {
                        "year": 2013,
                        "quarter": 3,
                        "value": 32030
                    }, {
                        "year": 2013,
                        "quarter": 4,
                        "value": 31008
                    }, {
                        "year": 2014,
                        "quarter": 1,
                        "value": 37715
                    }, {
                        "year": 2014,
                        "quarter": 2,
                        "value": 53163
                    }, {
                        "year": 2014,
                        "quarter": 3,
                        "value": 53830
                    }, {
                        "year": 2014,
                        "quarter": 4,
                        "value": 37302
                    }]
                }]
            }
        }
        actual = self.resaspy.tourism.foreigners.for_to( 2014, 11, 1, '-', 1 )
        self.assertEqual( expected, actual )

    def test_tourism_attractions( self ):
        expected = {
            "message": None,
            "result": {
                "data": [{
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1464,
                    "resourceName": "コトジツノマタの生息地"
                }, {
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1465,
                    "resourceName": "さざえの生息地"
                }, {
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1466,
                    "resourceName": "サンブスギの群生地"
                }, {
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1467,
                    "resourceName": "ちばの牛乳牧場"
                }, {
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1468,
                    "resourceName": "ちばの豚牧場"
                }, {
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1469,
                    "resourceName": "テングサの生息地"
                }, {
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1470,
                    "resourceName": "ハバノリの生息地"
                }, {
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1471,
                    "resourceName": "ハマグリの生息地"
                }, {
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1472,
                    "resourceName": "ヒジキの生息地"
                }, {
                    "lat": 35.604993,
                    "lng": 140.123276,
                    "resourceCode": 1473,
                    "resourceName": "夏みかん農園"
                }, {
                    "lat": 35.587548,
                    "lng": 140.158053,
                    "resourceCode": 1474,
                    "resourceName": "月ノ木貝塚"
                }, {
                    "lat": 35.600413,
                    "lng": 140.097878,
                    "resourceCode": 1475,
                    "resourceName": "千葉ポートタワー"
                }, {
                    "lat": 35.619755,
                    "lng": 140.117853,
                    "resourceCode": 1476,
                    "resourceName": "千葉公園"
                }, {
                    "lat": 35.611878,
                    "lng": 140.123719,
                    "resourceCode": 1477,
                    "resourceName": "千葉神社"
                }, {
                    "lat": 35.608932,
                    "lng": 140.124637,
                    "resourceCode": 1478,
                    "resourceName": "千葉都心イルミネーション（ルミラージュちば）"
                }, {
                    "lat": 35.663939,
                    "lng": 140.096251,
                    "resourceCode": 1479,
                    "resourceName": "犢橋貝塚"
                }, {
                    "lat": 35.643777,
                    "lng": 140.078006,
                    "resourceCode": 1480,
                    "resourceName": "千葉のさつまいも農園"
                }, {
                    "lat": 35.636645,
                    "lng": 140.08244,
                    "resourceCode": 1481,
                    "resourceName": "浅間神社の神楽"
                }, {
                    "lat": 35.623702,
                    "lng": 140.165317,
                    "resourceCode": 1482,
                    "resourceName": "加曽利貝塚"
                }, {
                    "lat": 35.616376,
                    "lng": 140.162677,
                    "resourceCode": 1483,
                    "resourceName": "花輪貝塚"
                }, {
                    "lat": 35.64265,
                    "lng": 140.163008,
                    "resourceCode": 1484,
                    "resourceName": "御成街道"
                }, {
                    "lat": 35.617431,
                    "lng": 140.139657,
                    "resourceCode": 1485,
                    "resourceName": "荒屋敷貝塚"
                }, {
                    "lat": 35.576937,
                    "lng": 140.226882,
                    "resourceCode": 1486,
                    "resourceName": "泉自然公園"
                }, {
                    "lat": 35.531027,
                    "lng": 140.263148,
                    "resourceCode": 1487,
                    "resourceName": "稲毛の松林"
                }, {
                    "lat": 35.51824,
                    "lng": 140.281028,
                    "resourceCode": 1488,
                    "resourceName": "昭和の森"
                }, {
                    "lat": 35.553298,
                    "lng": 140.282448,
                    "resourceCode": 1489,
                    "resourceName": "千葉のいちご農園"
                }, {
                    "lat": 35.583995,
                    "lng": 140.19114,
                    "resourceCode": 1490,
                    "resourceName": "千葉のネギ農園"
                }, {
                    "lat": 35.650749,
                    "lng": 140.043687,
                    "resourceCode": 1491,
                    "resourceName": "幕張新都心"
                }, {
                    "lat": 35.700714,
                    "lng": 140.858594,
                    "resourceCode": 1492,
                    "resourceName": "犬吠埼"
                }, {
                    "lat": 35.734667,
                    "lng": 140.826791,
                    "resourceCode": 1493,
                    "resourceName": "銚子ジオパーク"
                }, {
                    "lat": 35.728943,
                    "lng": 140.753155,
                    "resourceCode": 1494,
                    "resourceName": "銚子メロン農園"
                }, {
                    "lat": 35.728803,
                    "lng": 140.83407,
                    "resourceCode": 1495,
                    "resourceName": "銚子電鉄"
                }, {
                    "lat": 35.708097,
                    "lng": 140.868501,
                    "resourceCode": 1496,
                    "resourceName": "灯台印キャベツ農園"
                }, {
                    "lat": 35.708379,
                    "lng": 140.792818,
                    "resourceCode": 1497,
                    "resourceName": "屏風ヶ浦"
                }, {
                    "lat": 35.728832,
                    "lng": 139.906742,
                    "resourceCode": 1498,
                    "resourceName": "アイ・リンクタウン展望施設"
                }, {
                    "lat": 35.737637,
                    "lng": 139.965356,
                    "resourceCode": 1499,
                    "resourceName": "姥山貝塚"
                }, {
                    "lat": 35.682558,
                    "lng": 139.914235,
                    "resourceCode": 1500,
                    "resourceName": "行徳の御狩場"
                }, {
                    "lat": 35.721911,
                    "lng": 139.93101,
                    "resourceCode": 1501,
                    "resourceName": "市川のなし農園・市川の梨農園"
                }, {
                    "lat": 35.718868,
                    "lng": 139.907048,
                    "resourceCode": 1502,
                    "resourceName": "市川市民納涼花火大会"
                }, {
                    "lat": 35.768619,
                    "lng": 139.95892,
                    "resourceCode": 1503,
                    "resourceName": "千葉のなし農園"
                }, {
                    "lat": 35.74376,
                    "lng": 139.939053,
                    "resourceCode": 1504,
                    "resourceName": "曽谷貝塚"
                }, {
                    "lat": 35.7208,
                    "lng": 139.949239,
                    "resourceCode": 1505,
                    "resourceName": "中山法華経寺"
                }, {
                    "lat": 35.763505,
                    "lng": 139.908024,
                    "resourceCode": 1506,
                    "resourceName": "堀之内貝塚"
                }, {
                    "lat": 35.698504,
                    "lng": 140.057114,
                    "resourceCode": 1507,
                    "resourceName": "下総三山の七年祭り"
                }, {
                    "lat": 35.67245,
                    "lng": 139.96747,
                    "resourceCode": 1508,
                    "resourceName": "三番瀬"
                }, {
                    "lat": 35.69979,
                    "lng": 139.9843,
                    "resourceCode": 1509,
                    "resourceName": "千葉の小松菜農園"
                }, {
                    "lat": 35.715899,
                    "lng": 140.045567,
                    "resourceCode": 1510,
                    "resourceName": "千葉寺ノ公孫樹（いちょう）"
                }, {
                    "lat": 35.69492,
                    "lng": 139.9821,
                    "resourceCode": 1511,
                    "resourceName": "船橋の小松菜農園"
                }, {
                    "lat": 35.711576,
                    "lng": 140.026636,
                    "resourceCode": 1512,
                    "resourceName": "船橋の神楽（船橋大神宮の神楽・二宮神社の神楽・高根町神明社の神楽・飯山満町大宮神社の神楽）"
                }, {
                    "lat": 35.696222,
                    "lng": 139.992981,
                    "resourceCode": 1513,
                    "resourceName": "船橋大神宮灯明台"
                }, {
                    "lat": 34.99583,
                    "lng": 139.862033,
                    "resourceCode": 1514,
                    "resourceName": "安房やわたんまち"
                }, {
                    "lat": 34.985858,
                    "lng": 139.84323,
                    "resourceCode": 1515,
                    "resourceName": "館山沖ノ島"
                }, {
                    "lat": 34.98554,
                    "lng": 139.860424,
                    "resourceCode": 1516,
                    "resourceName": "館山湾多目的観光桟橋"
                }, {
                    "lat": 34.975307,
                    "lng": 139.75758,
                    "resourceCode": 1517,
                    "resourceName": "洲崎灯台"
                }, {
                    "lat": 34.996506,
                    "lng": 139.869965,
                    "resourceCode": 1518,
                    "resourceName": "西岬のひまわり農園"
                }, {
                    "lat": 34.919886,
                    "lng": 139.826804,
                    "resourceCode": 1519,
                    "resourceName": "青木繁「海の幸」ゆかりの地"
                }, {
                    "lat": 34.943526,
                    "lng": 139.835647,
                    "resourceCode": 1520,
                    "resourceName": "千葉のレタス農園"
                }, {
                    "lat": 34.981206,
                    "lng": 139.830894,
                    "resourceCode": 1521,
                    "resourceName": "南房総における第2次世界大戦中の首都防衛に関する遺跡群"
                }, {
                    "lat": 34.98314,
                    "lng": 139.841787,
                    "resourceCode": 1522,
                    "resourceName": "房総フラワーライン"
                }, {
                    "lat": 35.37645,
                    "lng": 139.979984,
                    "resourceCode": 1523,
                    "resourceName": "東京湾アクアライン"
                }, {
                    "lat": 35.413187,
                    "lng": 139.905825,
                    "resourceCode": 1524,
                    "resourceName": "東京湾の干潟・浅瀬"
                }, {
                    "lat": 35.382007,
                    "lng": 139.920972,
                    "resourceCode": 1525,
                    "resourceName": "木更津甚句"
                }, {
                    "lat": 35.383592,
                    "lng": 139.912627,
                    "resourceCode": 1526,
                    "resourceName": "恋人の聖地／中の島大橋"
                }, {
                    "lat": 35.777436,
                    "lng": 139.898877,
                    "resourceCode": 1527,
                    "resourceName": "戸定が丘歴史公園"
                }, {
                    "lat": 35.799139,
                    "lng": 139.963552,
                    "resourceCode": 1528,
                    "resourceName": "常盤平さくら通り"
                }, {
                    "lat": 35.828947,
                    "lng": 139.928692,
                    "resourceCode": 1529,
                    "resourceName": "東漸寺"
                }, {
                    "lat": 35.840455,
                    "lng": 139.928698,
                    "resourceCode": 1530,
                    "resourceName": "本土寺"
                }, {
                    "lat": 35.799037,
                    "lng": 139.912251,
                    "resourceCode": 1531,
                    "resourceName": "矢切ねぎ農園"
                }, {
                    "lat": 35.759469,
                    "lng": 139.883756,
                    "resourceCode": 1532,
                    "resourceName": "矢切の渡し"
                }, {
                    "lat": 36.100563,
                    "lng": 139.782451,
                    "resourceCode": 1533,
                    "resourceName": "関宿城"
                }, {
                    "lat": 35.941897,
                    "lng": 139.869432,
                    "resourceCode": 1534,
                    "resourceName": "野田の町並み（醤油のまち）"
                }, {
                    "lat": 35.409911,
                    "lng": 140.301289,
                    "resourceCode": 1535,
                    "resourceName": "茂原公園の桜"
                }, {
                    "lat": 35.43021,
                    "lng": 140.282882,
                    "resourceCode": 1536,
                    "resourceName": "茂原七夕まつり"
                }, {
                    "lat": 35.776211,
                    "lng": 140.330223,
                    "resourceCode": 1537,
                    "resourceName": "三舟山展望台"
                }, {
                    "lat": 35.773552,
                    "lng": 140.388244,
                    "resourceCode": 1538,
                    "resourceName": "成田空港"
                }, {
                    "lat": 35.786056,
                    "lng": 140.318286,
                    "resourceCode": 1539,
                    "resourceName": "成田山新勝寺"
                }, {
                    "lat": 35.810203,
                    "lng": 140.387164,
                    "resourceCode": 1540,
                    "resourceName": "千葉のさといも農園"
                }, {
                    "lat": 35.786093,
                    "lng": 140.318286,
                    "resourceCode": 1541,
                    "resourceName": "梅林"
                }, {
                    "lat": 35.80231,
                    "lng": 140.279264,
                    "resourceCode": 1542,
                    "resourceName": "房総の里山"
                }, {
                    "lat": 35.753672,
                    "lng": 140.196121,
                    "resourceCode": 1543,
                    "resourceName": "印旛沼"
                }, {
                    "lat": 35.740447,
                    "lng": 140.202699,
                    "resourceCode": 1544,
                    "resourceName": "佐倉ふるさと広場"
                }, {
                    "lat": 35.748091,
                    "lng": 140.214411,
                    "resourceCode": 1545,
                    "resourceName": "佐倉草ぶえの丘と野鳥の森"
                }, {
                    "lat": 35.719006,
                    "lng": 140.226636,
                    "resourceCode": 1546,
                    "resourceName": "佐倉麻賀多（まがた）神社の祭り"
                }, {
                    "lat": 35.719423,
                    "lng": 140.233322,
                    "resourceCode": 1547,
                    "resourceName": "城下町佐倉の街並み"
                }, {
                    "lat": 35.560347,
                    "lng": 140.360604,
                    "resourceCode": 1548,
                    "resourceName": "山王台公園"
                }, {
                    "lat": 35.581905,
                    "lng": 140.351868,
                    "resourceCode": 1549,
                    "resourceName": "東金ぶどう郷"
                }, {
                    "lat": 35.561348,
                    "lng": 140.358238,
                    "resourceCode": 1550,
                    "resourceName": "八鶴湖"
                }, {
                    "lat": 35.720434,
                    "lng": 140.646469,
                    "resourceCode": 1551,
                    "resourceName": "ステビア椿ポーク（豚肉）牧場"
                }, {
                    "lat": 35.693391,
                    "lng": 140.739342,
                    "resourceCode": 1552,
                    "resourceName": "刑部岬"
                }, {
                    "lat": 35.782543,
                    "lng": 140.624939,
                    "resourceCode": 1553,
                    "resourceName": "大原幽学遺跡史跡公園"
                }, {
                    "lat": 35.680699,
                    "lng": 140.005449,
                    "resourceCode": 1554,
                    "resourceName": "谷津バラ園"
                }, {
                    "lat": 35.674016,
                    "lng": 140.005358,
                    "resourceCode": 1555,
                    "resourceName": "谷津干潟"
                }, {
                    "lat": 35.690093,
                    "lng": 140.03544,
                    "resourceCode": 1556,
                    "resourceName": "藤崎堀込貝塚"
                }, {
                    "lat": 35.896327,
                    "lng": 139.974088,
                    "resourceCode": 1557,
                    "resourceName": "旧吉田家住宅"
                }, {
                    "lat": 35.899008,
                    "lng": 140.00503,
                    "resourceCode": 1558,
                    "resourceName": "布施弁天（紅竜山東海寺）"
                }, {
                    "lat": 35.137573,
                    "lng": 140.275588,
                    "resourceCode": 1559,
                    "resourceName": "鵜原理想郷"
                }, {
                    "lat": 35.143037,
                    "lng": 140.32363,
                    "resourceCode": 1560,
                    "resourceName": "官軍塚"
                }, {
                    "lat": 35.15,
                    "lng": 140.32,
                    "resourceCode": 1561,
                    "resourceName": "勝浦朝市"
                }, {
                    "lat": 35.273791,
                    "lng": 140.175974,
                    "resourceCode": 1562,
                    "resourceName": "ちばの肉牛牧場"
                }, {
                    "lat": 35.475026,
                    "lng": 140.044818,
                    "resourceCode": 1563,
                    "resourceName": "姉崎ダイコン農園"
                }, {
                    "lat": 35.440352,
                    "lng": 140.114203,
                    "resourceCode": 1564,
                    "resourceName": "小湊鉄道"
                }, {
                    "lat": 35.500887,
                    "lng": 140.11744,
                    "resourceCode": 1565,
                    "resourceName": "上総国分尼寺・国分寺"
                }, {
                    "lat": 35.266409,
                    "lng": 140.159398,
                    "resourceCode": 1566,
                    "resourceName": "養老渓谷"
                }, {
                    "lat": 35.877462,
                    "lng": 139.904479,
                    "resourceCode": 1567,
                    "resourceName": "九十九谷"
                }, {
                    "lat": 35.91432,
                    "lng": 139.896292,
                    "resourceCode": 1568,
                    "resourceName": "利根運河"
                }, {
                    "lat": 35.747853,
                    "lng": 140.075415,
                    "resourceCode": 1569,
                    "resourceName": "千葉のブルーベリー農園"
                }, {
                    "lat": 35.71417,
                    "lng": 140.089087,
                    "resourceCode": 1570,
                    "resourceName": "千葉の植木農園"
                }, {
                    "lat": 35.861145,
                    "lng": 140.029423,
                    "resourceCode": 1571,
                    "resourceName": "手賀沼"
                }, {
                    "lat": 35.128234,
                    "lng": 140.015521,
                    "resourceCode": 1572,
                    "resourceName": "温州みかん農園"
                }, {
                    "lat": 35.107535,
                    "lng": 140.106266,
                    "resourceCode": 1573,
                    "resourceName": "鴨川温泉"
                }, {
                    "lat": 35.123486,
                    "lng": 140.183862,
                    "resourceCode": 1574,
                    "resourceName": "小湊温泉"
                }, {
                    "lat": 35.076655,
                    "lng": 140.104259,
                    "resourceCode": 1575,
                    "resourceName": "仁右衛門島"
                }, {
                    "lat": 35.126196,
                    "lng": 140.032464,
                    "resourceCode": 1576,
                    "resourceName": "千葉の菜の花農園"
                }, {
                    "lat": 35.130322,
                    "lng": 139.973853,
                    "resourceCode": 1577,
                    "resourceName": "大山千枚田"
                }, {
                    "lat": 35.102716,
                    "lng": 140.103091,
                    "resourceCode": 1578,
                    "resourceName": "長狭米農園"
                }, {
                    "lat": 35.118519,
                    "lng": 140.197219,
                    "resourceCode": 1579,
                    "resourceName": "日蓮ゆかりの史跡"
                }, {
                    "lat": 35.120339,
                    "lng": 140.083097,
                    "resourceCode": 1580,
                    "resourceName": "波の伊八の作品群"
                }, {
                    "lat": 35.757949,
                    "lng": 140.013737,
                    "resourceCode": 1581,
                    "resourceName": "鎌ヶ谷大仏"
                }, {
                    "lat": 35.774724,
                    "lng": 139.99082,
                    "resourceCode": 1582,
                    "resourceName": "国史跡下総小金中野牧跡"
                }, {
                    "lat": 35.22488,
                    "lng": 140.086176,
                    "resourceCode": 1583,
                    "resourceName": "亀山湖"
                }, {
                    "lat": 35.287575,
                    "lng": 140.090023,
                    "resourceCode": 1584,
                    "resourceName": "久留里城"
                }, {
                    "lat": 35.254928,
                    "lng": 139.960969,
                    "resourceCode": 1585,
                    "resourceName": "鹿野山"
                }, {
                    "lat": 35.313127,
                    "lng": 139.89385,
                    "resourceCode": 1586,
                    "resourceName": "小糸在来（大豆）農園"
                }, {
                    "lat": 35.266629,
                    "lng": 139.995632,
                    "resourceCode": 1587,
                    "resourceName": "小糸川"
                }, {
                    "lat": 35.337162,
                    "lng": 139.867227,
                    "resourceCode": 1588,
                    "resourceName": "人見神社"
                }, {
                    "lat": 35.330559,
                    "lng": 139.902452,
                    "resourceCode": 1589,
                    "resourceName": "生きた水・久留里"
                }, {
                    "lat": 35.160391,
                    "lng": 139.840869,
                    "resourceCode": 1590,
                    "resourceName": "鋸山"
                }, {
                    "lat": 35.628764,
                    "lng": 139.897724,
                    "resourceCode": 1591,
                    "resourceName": "千葉市民花火大会"
                }, {
                    "lat": 35.388115,
                    "lng": 140.052896,
                    "resourceCode": 1592,
                    "resourceName": "千葉のイチジク農園"
                }, {
                    "lat": 35.679252,
                    "lng": 140.31249,
                    "resourceCode": 1593,
                    "resourceName": "千葉のとうもろこし農園"
                }, {
                    "lat": 35.679338,
                    "lng": 140.312263,
                    "resourceCode": 1594,
                    "resourceName": "千葉のニンジン農園"
                }, {
                    "lat": 35.679252,
                    "lng": 140.31249,
                    "resourceCode": 1595,
                    "resourceName": "千葉の落花生農園"
                }, {
                    "lat": 35.679252,
                    "lng": 140.31249,
                    "resourceCode": 1596,
                    "resourceName": "八街産落花生農園"
                }, {
                    "lat": 35.799481,
                    "lng": 140.160281,
                    "resourceCode": 1597,
                    "resourceName": "バラ"
                }, {
                    "lat": 35.78153,
                    "lng": 140.165304,
                    "resourceCode": 1598,
                    "resourceName": "千葉のトマト農園"
                }, {
                    "lat": 35.728028,
                    "lng": 140.341722,
                    "resourceCode": 1599,
                    "resourceName": "富里スイカロードレース大会"
                }, {
                    "lat": 35.727314,
                    "lng": 140.343833,
                    "resourceCode": 1600,
                    "resourceName": "富里スイカ農園"
                }, {
                    "lat": 34.905546,
                    "lng": 139.870395,
                    "resourceCode": 1601,
                    "resourceName": "高家神社（包丁式）"
                }, {
                    "lat": 35.038946,
                    "lng": 139.812751,
                    "resourceCode": 1602,
                    "resourceName": "大房岬"
                }, {
                    "lat": 35.095052,
                    "lng": 139.880505,
                    "resourceCode": 1603,
                    "resourceName": "南総里見八犬伝ゆかりの史跡"
                }, {
                    "lat": 35.104444,
                    "lng": 139.867394,
                    "resourceCode": 1604,
                    "resourceName": "南房総の花の群生地"
                }, {
                    "lat": 35.104409,
                    "lng": 139.989802,
                    "resourceCode": 1605,
                    "resourceName": "日本酪農発祥の地（嶺岡牧）"
                }, {
                    "lat": 35.096742,
                    "lng": 139.870328,
                    "resourceCode": 1606,
                    "resourceName": "伏姫籠穴"
                }, {
                    "lat": 35.058558,
                    "lng": 139.862639,
                    "resourceCode": 1607,
                    "resourceName": "房州びわ農園"
                }, {
                    "lat": 35.042691,
                    "lng": 139.839833,
                    "resourceCode": 1608,
                    "resourceName": "房総のくじらの生息地"
                }, {
                    "lat": 34.906233,
                    "lng": 139.877388,
                    "resourceCode": 1609,
                    "resourceName": "野島崎"
                }, {
                    "lat": 35.744945,
                    "lng": 140.529363,
                    "resourceCode": 1610,
                    "resourceName": "飯高寺（飯高壇林）"
                }, {
                    "lat": 35.881054,
                    "lng": 140.499191,
                    "resourceCode": 1611,
                    "resourceName": "観福寺"
                }, {
                    "lat": 35.886171,
                    "lng": 140.52892,
                    "resourceCode": 1612,
                    "resourceName": "香取神宮"
                }, {
                    "lat": 35.89122,
                    "lng": 140.489718,
                    "resourceCode": 1613,
                    "resourceName": "佐原の山車行事"
                }, {
                    "lat": 35.92667,
                    "lng": 140.487325,
                    "resourceCode": 1614,
                    "resourceName": "佐原歴史的町並み"
                }, {
                    "lat": 35.886283,
                    "lng": 140.569753,
                    "resourceCode": 1615,
                    "resourceName": "水郷"
                }, {
                    "lat": 35.897735,
                    "lng": 140.499268,
                    "resourceCode": 1616,
                    "resourceName": "水郷十二橋と与田浦"
                }, {
                    "lat": 35.805946,
                    "lng": 140.469968,
                    "resourceCode": 1617,
                    "resourceName": "房総ポークＣ（豚肉）牧場"
                }, {
                    "lat": 35.802535,
                    "lng": 140.467114,
                    "resourceCode": 1618,
                    "resourceName": "北総のポーク（豚肉）牧場"
                }, {
                    "lat": 35.207611,
                    "lng": 140.392966,
                    "resourceCode": 1619,
                    "resourceName": "岩船地蔵尊"
                }, {
                    "lat": 35.290165,
                    "lng": 140.356334,
                    "resourceCode": 1620,
                    "resourceName": "清水寺"
                }, {
                    "lat": 35.319973,
                    "lng": 140.293065,
                    "resourceCode": 1621,
                    "resourceName": "千葉の食用なばな農園"
                }, {
                    "lat": 35.303393,
                    "lng": 140.413141,
                    "resourceCode": 1622,
                    "resourceName": "太東海浜植物群落"
                }, {
                    "lat": 35.329736,
                    "lng": 140.396998,
                    "resourceCode": 1623,
                    "resourceName": "太東岬"
                }, {
                    "lat": 35.245009,
                    "lng": 140.389986,
                    "resourceCode": 1624,
                    "resourceName": "大原はだか祭り"
                }, {
                    "lat": 35.821204,
                    "lng": 140.277134,
                    "resourceCode": 1625,
                    "resourceName": "岩屋古墳"
                }, {
                    "lat": 35.82296,
                    "lng": 140.273112,
                    "resourceCode": 1626,
                    "resourceName": "房総のむら"
                }, {
                    "lat": 35.831366,
                    "lng": 140.269914,
                    "resourceCode": 1627,
                    "resourceName": "龍角寺"
                }, {
                    "lat": 35.833192,
                    "lng": 140.269794,
                    "resourceCode": 1628,
                    "resourceName": "龍角寺古墳群"
                }, {
                    "lat": 35.769697,
                    "lng": 140.427523,
                    "resourceCode": 1629,
                    "resourceName": "千葉のやまといも農園"
                }, {
                    "lat": 35.842599,
                    "lng": 140.660504,
                    "resourceCode": 1630,
                    "resourceName": "天保水滸伝ゆかりの地"
                }, {
                    "lat": 35.527352,
                    "lng": 140.449808,
                    "resourceCode": 1631,
                    "resourceName": "九十九里浜"
                }, {
                    "lat": 35.519626,
                    "lng": 140.439659,
                    "resourceCode": 1632,
                    "resourceName": "白子テニスリゾート"
                }, {
                    "lat": 35.692626,
                    "lng": 140.426753,
                    "resourceCode": 1633,
                    "resourceName": "芝山仁王尊（観音教寺）"
                }, {
                    "lat": 35.681307,
                    "lng": 140.419477,
                    "resourceCode": 1634,
                    "resourceName": "芝山古墳群"
                }, {
                    "lat": 35.415002,
                    "lng": 140.391705,
                    "resourceCode": 1635,
                    "resourceName": "白子の砂風呂"
                }, {
                    "lat": 35.45434,
                    "lng": 140.374253,
                    "resourceCode": 1636,
                    "resourceName": "白子たまねぎ農園"
                }, {
                    "lat": 35.432561,
                    "lng": 140.395054,
                    "resourceCode": 1637,
                    "resourceName": "白子温泉"
                }, {
                    "lat": 35.399624,
                    "lng": 140.198926,
                    "resourceCode": 1638,
                    "resourceName": "笠森観音"
                }, {
                    "lat": 35.345266,
                    "lng": 140.242691,
                    "resourceCode": 1639,
                    "resourceName": "熊野の清水"
                }, {
                    "lat": 35.219817,
                    "lng": 140.182251,
                    "resourceCode": 1640,
                    "resourceName": "粟又の滝"
                }, {
                    "lat": 35.207343,
                    "lng": 140.228053,
                    "resourceCode": 1641,
                    "resourceName": "千葉のたけのこ農園"
                }, {
                    "lat": 35.267475,
                    "lng": 140.238453,
                    "resourceCode": 1642,
                    "resourceName": "大多喜城"
                }, {
                    "lat": 35.184393,
                    "lng": 140.358189,
                    "resourceCode": 1643,
                    "resourceName": "月の沙漠（御宿海岸）"
                }]
            }
        }
        actual = self.resaspy.tourism.attractions( 12, '-' )
        self.assertEqual( expected, actual )

class PopulationTest( unittest.TestCase ):
    def setUp( self ):
        api_key = os.environ['RESAS_API_KEY']
        self.resaspy = Resaspy( api_key )

    def test_population_nature( self ):
        expected = {
            "message": None,
            "result": {
                "line": {
                    "boundaryYear": 2014,
                    "data": [{
                        "yearRange": "1998-2002",
                        "year": 2000,
                        "value": 1.48
                    }, {
                        "yearRange": "2003-2007",
                        "year": 2005,
                        "value": 1.33
                    }, {
                        "yearRange": "2008-2012",
                        "year": 2010,
                        "value": 1.48
                    }]
                },
                "bar": {
                    "boundaryYear": 2014,
                    "mandata": [{
                        "year": 1980,
                        "value": 3533
                    }, {
                        "year": 1985,
                        "value": 3710
                    }, {
                        "year": 1990,
                        "value": 3837
                    }, {
                        "year": 1995,
                        "value": 4009
                    }, {
                        "year": 2000,
                        "value": 4012
                    }, {
                        "year": 2005,
                        "value": 4018
                    }, {
                        "year": 2010,
                        "value": 3943
                    }, {
                        "year": 2015,
                        "value": 3750
                    }, {
                        "year": 2020,
                        "value": 3580
                    }, {
                        "year": 2025,
                        "value": 3373
                    }, {
                        "year": 2030,
                        "value": 3179
                    }, {
                        "year": 2035,
                        "value": 2953
                    }, {
                        "year": 2040,
                        "value": 2749
                    }],
                    "womandata": [{
                        "year": 1980,
                        "value": 3891
                    }, {
                        "year": 1985,
                        "value": 4065
                    }, {
                        "year": 1990,
                        "value": 4149
                    }, {
                        "year": 1995,
                        "value": 4281
                    }, {
                        "year": 2000,
                        "value": 4321
                    }, {
                        "year": 2005,
                        "value": 4366
                    }, {
                        "year": 2010,
                        "value": 4248
                    }, {
                        "year": 2015,
                        "value": 4044
                    }, {
                        "year": 2020,
                        "value": 3795
                    }, {
                        "year": 2025,
                        "value": 3547
                    }, {
                        "year": 2030,
                        "value": 3310
                    }, {
                        "year": 2035,
                        "value": 3090
                    }, {
                        "year": 2040,
                        "value": 2819
                    }]
                }
            }
        }
        actual = self.resaspy.population.nature( 11, 11362, 30, '-' )
        self.assertEqual( expected, actual )

    def test_population_composition_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "boundaryYear": 2014,
                "data": [{
                    "label": "総人口",
                    "data": [{
                        "year": 1980,
                        "value": 12817
                    }, {
                        "year": 1985,
                        "value": 12707
                    }, {
                        "year": 1990,
                        "value": 12571
                    }, {
                        "year": 1995,
                        "value": 12602
                    }, {
                        "year": 2000,
                        "value": 12199
                    }, {
                        "year": 2005,
                        "value": 11518
                    }, {
                        "year": 2010,
                        "value": 10888
                    }, {
                        "year": 2015,
                        "value": 10182
                    }, {
                        "year": 2020,
                        "value": 9525
                    }, {
                        "year": 2025,
                        "value": 8856
                    }, {
                        "year": 2030,
                        "value": 8200
                    }, {
                        "year": 2035,
                        "value": 7541
                    }, {
                        "year": 2040,
                        "value": 6893
                    }]
                }, {
                    "label": "年少人口",
                    "data": [{
                        "year": 1980,
                        "value": 2906,
                        "rate": 22.6
                    }, {
                        "year": 1985,
                        "value": 2769,
                        "rate": 21.7
                    }, {
                        "year": 1990,
                        "value": 2346,
                        "rate": 18.6
                    }, {
                        "year": 1995,
                        "value": 2019,
                        "rate": 16
                    }, {
                        "year": 2000,
                        "value": 1728,
                        "rate": 14.1
                    }, {
                        "year": 2005,
                        "value": 1442,
                        "rate": 12.5
                    }, {
                        "year": 2010,
                        "value": 1321,
                        "rate": 12.1
                    }, {
                        "year": 2015,
                        "value": 1157,
                        "rate": 11.3
                    }, {
                        "year": 2020,
                        "value": 992,
                        "rate": 10.4
                    }, {
                        "year": 2025,
                        "value": 859,
                        "rate": 9.6
                    }, {
                        "year": 2030,
                        "value": 755,
                        "rate": 9.2
                    }, {
                        "year": 2035,
                        "value": 673,
                        "rate": 8.9
                    }, {
                        "year": 2040,
                        "value": 613,
                        "rate": 8.8
                    }]
                }, {
                    "label": "生産年齢人口",
                    "data": [{
                        "year": 1980,
                        "value": 8360,
                        "rate": 65.2
                    }, {
                        "year": 1985,
                        "value": 8236,
                        "rate": 64.8
                    }, {
                        "year": 1990,
                        "value": 8144,
                        "rate": 64.7
                    }, {
                        "year": 1995,
                        "value": 8048,
                        "rate": 63.8
                    }, {
                        "year": 2000,
                        "value": 7595,
                        "rate": 62.2
                    }, {
                        "year": 2005,
                        "value": 7032,
                        "rate": 61
                    }, {
                        "year": 2010,
                        "value": 6387,
                        "rate": 58.6
                    }, {
                        "year": 2015,
                        "value": 5651,
                        "rate": 55.4
                    }, {
                        "year": 2020,
                        "value": 5016,
                        "rate": 52.6
                    }, {
                        "year": 2025,
                        "value": 4561,
                        "rate": 51.5
                    }, {
                        "year": 2030,
                        "value": 4183,
                        "rate": 51
                    }, {
                        "year": 2035,
                        "value": 3833,
                        "rate": 50.8
                    }, {
                        "year": 2040,
                        "value": 3362,
                        "rate": 48.7
                    }]
                }, {
                    "label": "老年人口",
                    "data": [{
                        "year": 1980,
                        "value": 1550,
                        "rate": 12
                    }, {
                        "year": 1985,
                        "value": 1702,
                        "rate": 13.3
                    }, {
                        "year": 1990,
                        "value": 2081,
                        "rate": 16.5
                    }, {
                        "year": 1995,
                        "value": 2535,
                        "rate": 20.1
                    }, {
                        "year": 2000,
                        "value": 2876,
                        "rate": 23.5
                    }, {
                        "year": 2005,
                        "value": 3044,
                        "rate": 26.4
                    }, {
                        "year": 2010,
                        "value": 3179,
                        "rate": 29.1
                    }, {
                        "year": 2015,
                        "value": 3374,
                        "rate": 33.1
                    }, {
                        "year": 2020,
                        "value": 3517,
                        "rate": 36.9
                    }, {
                        "year": 2025,
                        "value": 3436,
                        "rate": 38.7
                    }, {
                        "year": 2030,
                        "value": 3262,
                        "rate": 39.7
                    }, {
                        "year": 2035,
                        "value": 3035,
                        "rate": 40.2
                    }, {
                        "year": 2040,
                        "value": 2918,
                        "rate": 42.3
                    }]
                }]
            }
        }
        actual = self.resaspy.population.composition.per_year( 11, 11362 )
        self.assertEqual( expected, actual )

    def test_population_composition_pyramid( self ):
        expected = {
            "message": None,
            "result": {
                "yearLeft": {
                    "year": 2030,
                    "oldAgeCount": 3262,
                    "oldAgePercent": 39,
                    "middleAgeCount": 4183,
                    "middleAgePercent": 51,
                    "newAgeCount": 755,
                    "newAgePercent": 9,
                    "data": [{
                        "class": "0～4歳",
                        "man": 119,
                        "manPercent": 1.45,
                        "woman": 113,
                        "womanPercent": 1.38
                    }, {
                        "class": "5～9歳",
                        "man": 126,
                        "manPercent": 1.54,
                        "woman": 116,
                        "womanPercent": 1.41
                    }, {
                        "class": "10～14歳",
                        "man": 145,
                        "manPercent": 1.77,
                        "woman": 136,
                        "womanPercent": 1.66
                    }, {
                        "class": "15～19歳",
                        "man": 157,
                        "manPercent": 1.91,
                        "woman": 144,
                        "womanPercent": 1.76
                    }, {
                        "class": "20～24歳",
                        "man": 169,
                        "manPercent": 2.06,
                        "woman": 129,
                        "womanPercent": 1.57
                    }, {
                        "class": "25～29歳",
                        "man": 178,
                        "manPercent": 2.17,
                        "woman": 179,
                        "womanPercent": 2.18
                    }, {
                        "class": "30～34歳",
                        "man": 219,
                        "manPercent": 2.67,
                        "woman": 163,
                        "womanPercent": 1.99
                    }, {
                        "class": "35～39歳",
                        "man": 204,
                        "manPercent": 2.49,
                        "woman": 159,
                        "womanPercent": 1.94
                    }, {
                        "class": "40～44歳",
                        "man": 232,
                        "manPercent": 2.83,
                        "woman": 172,
                        "womanPercent": 2.1
                    }, {
                        "class": "45～49歳",
                        "man": 217,
                        "manPercent": 2.65,
                        "woman": 227,
                        "womanPercent": 2.77
                    }, {
                        "class": "50～54歳",
                        "man": 265,
                        "manPercent": 3.23,
                        "woman": 220,
                        "womanPercent": 2.68
                    }, {
                        "class": "55～59歳",
                        "man": 318,
                        "manPercent": 3.88,
                        "woman": 305,
                        "womanPercent": 3.72
                    }, {
                        "class": "60～64歳",
                        "man": 253,
                        "manPercent": 3.09,
                        "woman": 273,
                        "womanPercent": 3.33
                    }, {
                        "class": "65～69歳",
                        "man": 281,
                        "manPercent": 3.43,
                        "woman": 279,
                        "womanPercent": 3.4
                    }, {
                        "class": "70～74歳",
                        "man": 296,
                        "manPercent": 3.61,
                        "woman": 321,
                        "womanPercent": 3.91
                    }, {
                        "class": "75～79歳",
                        "man": 332,
                        "manPercent": 4.05,
                        "woman": 397,
                        "womanPercent": 4.84
                    }, {
                        "class": "80～84歳",
                        "man": 288,
                        "manPercent": 3.51,
                        "woman": 353,
                        "womanPercent": 4.3
                    }, {
                        "class": "85～89歳",
                        "man": 147,
                        "manPercent": 1.79,
                        "woman": 225,
                        "womanPercent": 2.74
                    }, {
                        "class": "90歳～",
                        "man": 127,
                        "manPercent": 1.55,
                        "woman": 216,
                        "womanPercent": 2.63
                    }]
                },
                "yearRight": {
                    "year": 1980,
                    "oldAgeCount": 1550,
                    "oldAgePercent": 12,
                    "middleAgeCount": 8360,
                    "middleAgePercent": 65,
                    "newAgeCount": 2906,
                    "newAgePercent": 22,
                    "data": [{
                        "class": "0～4歳",
                        "man": 460,
                        "manPercent": 3.59,
                        "woman": 420,
                        "womanPercent": 3.28
                    }, {
                        "class": "5～9歳",
                        "man": 541,
                        "manPercent": 4.22,
                        "woman": 551,
                        "womanPercent": 4.3
                    }, {
                        "class": "10～14歳",
                        "man": 469,
                        "manPercent": 3.66,
                        "woman": 465,
                        "womanPercent": 3.63
                    }, {
                        "class": "15～19歳",
                        "man": 466,
                        "manPercent": 3.64,
                        "woman": 434,
                        "womanPercent": 3.39
                    }, {
                        "class": "20～24歳",
                        "man": 330,
                        "manPercent": 2.57,
                        "woman": 370,
                        "womanPercent": 2.89
                    }, {
                        "class": "25～29歳",
                        "man": 437,
                        "manPercent": 3.41,
                        "woman": 449,
                        "womanPercent": 3.5
                    }, {
                        "class": "30～34歳",
                        "man": 518,
                        "manPercent": 4.04,
                        "woman": 469,
                        "womanPercent": 3.66
                    }, {
                        "class": "35～39歳",
                        "man": 411,
                        "manPercent": 3.21,
                        "woman": 385,
                        "womanPercent": 3
                    }, {
                        "class": "40～44歳",
                        "man": 389,
                        "manPercent": 3.04,
                        "woman": 368,
                        "womanPercent": 2.87
                    }, {
                        "class": "45～49歳",
                        "man": 425,
                        "manPercent": 3.32,
                        "woman": 450,
                        "womanPercent": 3.51
                    }, {
                        "class": "50～54歳",
                        "man": 452,
                        "manPercent": 3.53,
                        "woman": 480,
                        "womanPercent": 3.75
                    }, {
                        "class": "55～59歳",
                        "man": 377,
                        "manPercent": 2.94,
                        "woman": 508,
                        "womanPercent": 3.96
                    }, {
                        "class": "60～64歳",
                        "man": 300,
                        "manPercent": 2.34,
                        "woman": 342,
                        "womanPercent": 2.67
                    }, {
                        "class": "65～69歳",
                        "man": 230,
                        "manPercent": 1.79,
                        "woman": 298,
                        "womanPercent": 2.33
                    }, {
                        "class": "70～74歳",
                        "man": 188,
                        "manPercent": 1.47,
                        "woman": 237,
                        "womanPercent": 1.85
                    }, {
                        "class": "75～79歳",
                        "man": 124,
                        "manPercent": 0.97,
                        "woman": 172,
                        "womanPercent": 1.34
                    }, {
                        "class": "80～84歳",
                        "man": 84,
                        "manPercent": 0.66,
                        "woman": 117,
                        "womanPercent": 0.91
                    }, {
                        "class": "85～89歳",
                        "man": 28,
                        "manPercent": 0.22,
                        "woman": 50,
                        "womanPercent": 0.39
                    }, {
                        "class": "90歳～",
                        "man": 7,
                        "manPercent": 0.05,
                        "woman": 15,
                        "womanPercent": 0.12
                    }]
                }
            }
        }
        actual = self.resaspy.population.composition.pyramid( 11, 11362, 2030, 1980 )
        self.assertEqual( expected, actual )

    def test_population_sum_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "line": {
                    "boundaryYear": 2014,
                    "data": [{
                        "year": 1985,
                        "value": -0.85
                    }, {
                        "year": 1990,
                        "value": -1.06
                    }, {
                        "year": 1995,
                        "value": 0.25
                    }, {
                        "year": 2000,
                        "value": -3.19
                    }, {
                        "year": 2005,
                        "value": -5.57
                    }, {
                        "year": 2010,
                        "value": -5.46
                    }, {
                        "year": 2015,
                        "value": -6.47
                    }, {
                        "year": 2020,
                        "value": -6.44
                    }, {
                        "year": 2025,
                        "value": -7.01
                    }, {
                        "year": 2030,
                        "value": -7.4
                    }, {
                        "year": 2035,
                        "value": -8.03
                    }, {
                        "year": 2040,
                        "value": -8.58
                    }]
                },
                "bar": {
                    "data": [{
                        "year": 1985,
                        "sum": -0.85,
                        "class": [{
                            "label": "老年人口",
                            "value": 9.81
                        }, {
                            "label": "生産年齢人口",
                            "value": -1.47
                        }, {
                            "label": "年少人口",
                            "value": -4.7
                        }]
                    }, {
                        "year": 1990,
                        "sum": -1.06,
                        "class": [{
                            "label": "老年人口",
                            "value": 22.27
                        }, {
                            "label": "生産年齢人口",
                            "value": -1.11
                        }, {
                            "label": "年少人口",
                            "value": -15.27
                        }]
                    }, {
                        "year": 1995,
                        "sum": 0.25,
                        "class": [{
                            "label": "老年人口",
                            "value": 21.82
                        }, {
                            "label": "生産年齢人口",
                            "value": -1.17
                        }, {
                            "label": "年少人口",
                            "value": -13.93
                        }]
                    }, {
                        "year": 2000,
                        "sum": -3.19,
                        "class": [{
                            "label": "老年人口",
                            "value": 13.45
                        }, {
                            "label": "生産年齢人口",
                            "value": -5.62
                        }, {
                            "label": "年少人口",
                            "value": -14.4
                        }]
                    }, {
                        "year": 2005,
                        "sum": -5.57,
                        "class": [{
                            "label": "老年人口",
                            "value": 5.84
                        }, {
                            "label": "生産年齢人口",
                            "value": -7.4
                        }, {
                            "label": "年少人口",
                            "value": -16.54
                        }]
                    }, {
                        "year": 2010,
                        "sum": -5.46,
                        "class": [{
                            "label": "老年人口",
                            "value": 4.43
                        }, {
                            "label": "生産年齢人口",
                            "value": -9.16
                        }, {
                            "label": "年少人口",
                            "value": -8.38
                        }]
                    }, {
                        "year": 2015,
                        "sum": -6.47,
                        "class": [{
                            "label": "老年人口",
                            "value": 6.13
                        }, {
                            "label": "生産年齢人口",
                            "value": -11.51
                        }, {
                            "label": "年少人口",
                            "value": -12.4
                        }]
                    }, {
                        "year": 2020,
                        "sum": -6.44,
                        "class": [{
                            "label": "老年人口",
                            "value": 4.24
                        }, {
                            "label": "生産年齢人口",
                            "value": -11.23
                        }, {
                            "label": "年少人口",
                            "value": -14.25
                        }]
                    }, {
                        "year": 2025,
                        "sum": -7.01,
                        "class": [{
                            "label": "老年人口",
                            "value": -2.29
                        }, {
                            "label": "生産年齢人口",
                            "value": -9.06
                        }, {
                            "label": "年少人口",
                            "value": -13.4
                        }]
                    }, {
                        "year": 2030,
                        "sum": -7.4,
                        "class": [{
                            "label": "老年人口",
                            "value": -5.05
                        }, {
                            "label": "生産年齢人口",
                            "value": -8.28
                        }, {
                            "label": "年少人口",
                            "value": -12.1
                        }]
                    }, {
                        "year": 2035,
                        "sum": -8.03,
                        "class": [{
                            "label": "老年人口",
                            "value": -6.95
                        }, {
                            "label": "生産年齢人口",
                            "value": -8.36
                        }, {
                            "label": "年少人口",
                            "value": -10.85
                        }]
                    }, {
                        "year": 2040,
                        "sum": -8.58,
                        "class": [{
                            "label": "老年人口",
                            "value": -3.85
                        }, {
                            "label": "生産年齢人口",
                            "value": -12.28
                        }, {
                            "label": "年少人口",
                            "value": -8.91
                        }]
                    }]
                }
            }
        }
        actual = self.resaspy.population.sum.per_year( 11, 11362 )
        self.assertEqual( expected, actual )

    def test_population_sum_estimate( self ):
        expected = {
            "message": None,
            "result": {
                "boundaryYear": 2014,
                "data": [{
                    "label": "総人口",
                    "data": [{
                        "year": 1995,
                        "value": 12602
                    }, {
                        "year": 2000,
                        "value": 12199
                    }, {
                        "year": 2005,
                        "value": 11470
                    }, {
                        "year": 2010,
                        "value": 10887
                    }, {
                        "year": 2015,
                        "value": 10182
                    }, {
                        "year": 2020,
                        "value": 9525
                    }, {
                        "year": 2025,
                        "value": 8856
                    }, {
                        "year": 2030,
                        "value": 8200
                    }, {
                        "year": 2035,
                        "value": 7541
                    }, {
                        "year": 2040,
                        "value": 6893
                    }]
                }, {
                    "label": "転入数",
                    "data": [{
                        "year": 1995,
                        "value": 344
                    }, {
                        "year": 1996,
                        "value": 477
                    }, {
                        "year": 1997,
                        "value": 413
                    }, {
                        "year": 1998,
                        "value": 340
                    }, {
                        "year": 1999,
                        "value": 329
                    }, {
                        "year": 2000,
                        "value": 361
                    }, {
                        "year": 2001,
                        "value": 341
                    }, {
                        "year": 2002,
                        "value": 333
                    }, {
                        "year": 2003,
                        "value": 279
                    }, {
                        "year": 2004,
                        "value": 309
                    }, {
                        "year": 2005,
                        "value": 304
                    }, {
                        "year": 2006,
                        "value": 277
                    }, {
                        "year": 2007,
                        "value": 266
                    }, {
                        "year": 2008,
                        "value": 290
                    }, {
                        "year": 2009,
                        "value": 337
                    }, {
                        "year": 2010,
                        "value": 278
                    }, {
                        "year": 2011,
                        "value": 262
                    }, {
                        "year": 2012,
                        "value": 261
                    }, {
                        "year": 2013,
                        "value": 214
                    }, {
                        "year": 2014,
                        "value": 218
                    }]
                }, {
                    "label": "転出数",
                    "data": [{
                        "year": 1995,
                        "value": 356
                    }, {
                        "year": 1996,
                        "value": 355
                    }, {
                        "year": 1997,
                        "value": 423
                    }, {
                        "year": 1998,
                        "value": 441
                    }, {
                        "year": 1999,
                        "value": 438
                    }, {
                        "year": 2000,
                        "value": 406
                    }, {
                        "year": 2001,
                        "value": 406
                    }, {
                        "year": 2002,
                        "value": 374
                    }, {
                        "year": 2003,
                        "value": 372
                    }, {
                        "year": 2004,
                        "value": 365
                    }, {
                        "year": 2005,
                        "value": 467
                    }, {
                        "year": 2006,
                        "value": 384
                    }, {
                        "year": 2007,
                        "value": 365
                    }, {
                        "year": 2008,
                        "value": 353
                    }, {
                        "year": 2009,
                        "value": 348
                    }, {
                        "year": 2010,
                        "value": 332
                    }, {
                        "year": 2011,
                        "value": 288
                    }, {
                        "year": 2012,
                        "value": 355
                    }, {
                        "year": 2013,
                        "value": 311
                    }, {
                        "year": 2014,
                        "value": 315
                    }]
                }, {
                    "label": "出生数",
                    "data": [{
                        "year": 1995,
                        "value": 96
                    }, {
                        "year": 1996,
                        "value": 99
                    }, {
                        "year": 1997,
                        "value": 112
                    }, {
                        "year": 1998,
                        "value": 102
                    }, {
                        "year": 1999,
                        "value": 106
                    }, {
                        "year": 2000,
                        "value": 96
                    }, {
                        "year": 2001,
                        "value": 99
                    }, {
                        "year": 2002,
                        "value": 93
                    }, {
                        "year": 2003,
                        "value": 89
                    }, {
                        "year": 2004,
                        "value": 99
                    }, {
                        "year": 2005,
                        "value": 80
                    }, {
                        "year": 2006,
                        "value": 64
                    }, {
                        "year": 2007,
                        "value": 70
                    }, {
                        "year": 2008,
                        "value": 80
                    }, {
                        "year": 2009,
                        "value": 74
                    }, {
                        "year": 2010,
                        "value": 93
                    }, {
                        "year": 2011,
                        "value": 67
                    }, {
                        "year": 2012,
                        "value": 86
                    }, {
                        "year": 2013,
                        "value": 67
                    }, {
                        "year": 2014,
                        "value": 58
                    }]
                }, {
                    "label": "死亡数",
                    "data": [{
                        "year": 1995,
                        "value": 130
                    }, {
                        "year": 1996,
                        "value": 134
                    }, {
                        "year": 1997,
                        "value": 129
                    }, {
                        "year": 1998,
                        "value": 99
                    }, {
                        "year": 1999,
                        "value": 135
                    }, {
                        "year": 2000,
                        "value": 124
                    }, {
                        "year": 2001,
                        "value": 128
                    }, {
                        "year": 2002,
                        "value": 123
                    }, {
                        "year": 2003,
                        "value": 140
                    }, {
                        "year": 2004,
                        "value": 137
                    }, {
                        "year": 2005,
                        "value": 146
                    }, {
                        "year": 2006,
                        "value": 147
                    }, {
                        "year": 2007,
                        "value": 126
                    }, {
                        "year": 2008,
                        "value": 144
                    }, {
                        "year": 2009,
                        "value": 163
                    }, {
                        "year": 2010,
                        "value": 161
                    }, {
                        "year": 2011,
                        "value": 165
                    }, {
                        "year": 2012,
                        "value": 132
                    }, {
                        "year": 2013,
                        "value": 158
                    }, {
                        "year": 2014,
                        "value": 173
                    }]
                }]
            }
        }
        actual = self.resaspy.population.sum.estimate( 11, 11362 )
        self.assertEqual( expected, actual )

    def test_population_future_cities( self ):
        expected = {
             "message": None,
             "result": {
                 "cities": [{
                     "cityCode": "01101",
                     "cityName": "札幌市中央区",
                     "value": 262557,
                     "ratio": 0.22
                 }, {
                     "cityCode": "01102",
                     "cityName": "札幌市北区",
                     "value": 257847,
                     "ratio": 0.38
                 }, {
                     "cityCode": "01103",
                     "cityName": "札幌市東区",
                     "value": 225135,
                     "ratio": 0.39
                 }, {
                     "cityCode": "01104",
                     "cityName": "札幌市白石区",
                     "value": 183479,
                     "ratio": 0.39
                 }, {
                     "cityCode": "01105",
                     "cityName": "札幌市豊平区",
                     "value": 191754,
                     "ratio": 0.39
                 }, {
                     "cityCode": "01106",
                     "cityName": "札幌市南区",
                     "value": 99405,
                     "ratio": 0.63
                 }, {
                     "cityCode": "01107",
                     "cityName": "札幌市西区",
                     "value": 191087,
                     "ratio": 0.4
                 }, {
                     "cityCode": "01108",
                     "cityName": "札幌市厚別区",
                     "value": 103678,
                     "ratio": 0.52
                 }, {
                     "cityCode": "01109",
                     "cityName": "札幌市手稲区",
                     "value": 127780,
                     "ratio": 0.42
                 }, {
                     "cityCode": "01110",
                     "cityName": "札幌市清田区",
                     "value": 110722,
                     "ratio": 0.37
                 }, {
                     "cityCode": "01202",
                     "cityName": "函館市",
                     "value": 161469,
                     "ratio": 0.6
                 }, {
                     "cityCode": "01203",
                     "cityName": "小樽市",
                     "value": 66696,
                     "ratio": 0.65
                 }, {
                     "cityCode": "01204",
                     "cityName": "旭川市",
                     "value": 241526,
                     "ratio": 0.52
                 }, {
                     "cityCode": "01205",
                     "cityName": "室蘭市",
                     "value": 60201,
                     "ratio": 0.46
                 }, {
                     "cityCode": "01206",
                     "cityName": "釧路市",
                     "value": 106085,
                     "ratio": 0.59
                 }, {
                     "cityCode": "01207",
                     "cityName": "帯広市",
                     "value": 125783,
                     "ratio": 0.49
                 }, {
                     "cityCode": "01208",
                     "cityName": "北見市",
                     "value": 85985,
                     "ratio": 0.56
                 }, {
                     "cityCode": "01209",
                     "cityName": "夕張市",
                     "value": 3104,
                     "ratio": 0.84
                 }, {
                     "cityCode": "01210",
                     "cityName": "岩見沢市",
                     "value": 57166,
                     "ratio": 0.54
                 }, {
                     "cityCode": "01211",
                     "cityName": "網走市",
                     "value": 29044,
                     "ratio": 0.51
                 }, {
                     "cityCode": "01212",
                     "cityName": "留萌市",
                     "value": 11447,
                     "ratio": 0.69
                 }, {
                     "cityCode": "01213",
                     "cityName": "苫小牧市",
                     "value": 140655,
                     "ratio": 0.4
                 }, {
                     "cityCode": "01214",
                     "cityName": "稚内市",
                     "value": 23623,
                     "ratio": 0.52
                 }, {
                     "cityCode": "01215",
                     "cityName": "美唄市",
                     "value": 11536,
                     "ratio": 0.72
                 }, {
                     "cityCode": "01216",
                     "cityName": "芦別市",
                     "value": 6259,
                     "ratio": 0.76
                 }, {
                     "cityCode": "01217",
                     "cityName": "江別市",
                     "value": 92980,
                     "ratio": 0.52
                 }, {
                     "cityCode": "01218",
                     "cityName": "赤平市",
                     "value": 4444,
                     "ratio": 0.69
                 }, {
                     "cityCode": "01219",
                     "cityName": "紋別市",
                     "value": 12197,
                     "ratio": 0.66
                 }, {
                     "cityCode": "01220",
                     "cityName": "士別市",
                     "value": 11458,
                     "ratio": 0.63
                 }, {
                     "cityCode": "01221",
                     "cityName": "名寄市",
                     "value": 22125,
                     "ratio": 0.32
                 }, {
                     "cityCode": "01222",
                     "cityName": "三笠市",
                     "value": 3196,
                     "ratio": 0.78
                 }, {
                     "cityCode": "01223",
                     "cityName": "根室市",
                     "value": 15714,
                     "ratio": 0.58
                 }, {
                     "cityCode": "01224",
                     "cityName": "千歳市",
                     "value": 87851,
                     "ratio": 0.28
                 }, {
                     "cityCode": "01225",
                     "cityName": "滝川市",
                     "value": 25795,
                     "ratio": 0.6
                 }, {
                     "cityCode": "01226",
                     "cityName": "砂川市",
                     "value": 11572,
                     "ratio": 0.5
                 }, {
                     "cityCode": "01227",
                     "cityName": "歌志内市",
                     "value": 1271,
                     "ratio": 0.84
                 }, {
                     "cityCode": "01228",
                     "cityName": "深川市",
                     "value": 11877,
                     "ratio": 0.68
                 }, {
                     "cityCode": "01229",
                     "cityName": "富良野市",
                     "value": 16659,
                     "ratio": 0.51
                 }, {
                     "cityCode": "01230",
                     "cityName": "登別市",
                     "value": 34853,
                     "ratio": 0.46
                 }, {
                     "cityCode": "01231",
                     "cityName": "恵庭市",
                     "value": 63537,
                     "ratio": 0.33
                 }, {
                     "cityCode": "01233",
                     "cityName": "伊達市",
                     "value": 25840,
                     "ratio": 0.47
                 }, {
                     "cityCode": "01234",
                     "cityName": "北広島市",
                     "value": 44795,
                     "ratio": 0.53
                 }, {
                     "cityCode": "01235",
                     "cityName": "石狩市",
                     "value": 44665,
                     "ratio": 0.47
                 }, {
                     "cityCode": "01236",
                     "cityName": "北斗市",
                     "value": 36984,
                     "ratio": 0.38
                 }, {
                     "cityCode": "01303",
                     "cityName": "当別町",
                     "value": 10287,
                     "ratio": 0.76
                 }, {
                     "cityCode": "01304",
                     "cityName": "新篠津村",
                     "value": 2047,
                     "ratio": 0.61
                 }, {
                     "cityCode": "01331",
                     "cityName": "松前町",
                     "value": 3162,
                     "ratio": 0.84
                 }, {
                     "cityCode": "01332",
                     "cityName": "福島町",
                     "value": 1660,
                     "ratio": 0.84
                 }, {
                     "cityCode": "01333",
                     "cityName": "知内町",
                     "value": 2800,
                     "ratio": 0.6
                 }, {
                     "cityCode": "01334",
                     "cityName": "木古内町",
                     "value": 2057,
                     "ratio": 0.86
                 }, {
                     "cityCode": "01337",
                     "cityName": "七飯町",
                     "value": 21541,
                     "ratio": 0.51
                 }, {
                     "cityCode": "01343",
                     "cityName": "鹿部町",
                     "value": 3631,
                     "ratio": 0.46
                 }, {
                     "cityCode": "01345",
                     "cityName": "森町",
                     "value": 9551,
                     "ratio": 0.59
                 }, {
                     "cityCode": "01346",
                     "cityName": "八雲町",
                     "value": 10964,
                     "ratio": 0.55
                 }, {
                     "cityCode": "01347",
                     "cityName": "長万部町",
                     "value": 3074,
                     "ratio": 0.41
                 }, {
                     "cityCode": "01361",
                     "cityName": "江差町",
                     "value": 3835,
                     "ratio": 0.76
                 }, {
                     "cityCode": "01362",
                     "cityName": "上ノ国町",
                     "value": 1988,
                     "ratio": 0.77
                 }, {
                     "cityCode": "01363",
                     "cityName": "厚沢部町",
                     "value": 2127,
                     "ratio": 0.67
                 }, {
                     "cityCode": "01364",
                     "cityName": "乙部町",
                     "value": 2036,
                     "ratio": 0.7
                 }, {
                     "cityCode": "01367",
                     "cityName": "奥尻町",
                     "value": 1064,
                     "ratio": 0.86
                 }, {
                     "cityCode": "01370",
                     "cityName": "今金町",
                     "value": 3881,
                     "ratio": 0.42
                 }, {
                     "cityCode": "01371",
                     "cityName": "せたな町",
                     "value": 3922,
                     "ratio": 0.75
                 }, {
                     "cityCode": "01391",
                     "cityName": "島牧村",
                     "value": 794,
                     "ratio": 0.66
                 }, {
                     "cityCode": "01392",
                     "cityName": "寿都町",
                     "value": 1685,
                     "ratio": 0.59
                 }, {
                     "cityCode": "01393",
                     "cityName": "黒松内町",
                     "value": 1870,
                     "ratio": 0.67
                 }, {
                     "cityCode": "01394",
                     "cityName": "蘭越町",
                     "value": 2517,
                     "ratio": 0.69
                 }, {
                     "cityCode": "01395",
                     "cityName": "ニセコ町",
                     "value": 4353,
                     "ratio": 0.38
                 }, {
                     "cityCode": "01396",
                     "cityName": "真狩村",
                     "value": 1173,
                     "ratio": 0.63
                 }, {
                     "cityCode": "01397",
                     "cityName": "留寿都村",
                     "value": 1555,
                     "ratio": 0.37
                 }, {
                     "cityCode": "01398",
                     "cityName": "喜茂別町",
                     "value": 1164,
                     "ratio": 0.69
                 }, {
                     "cityCode": "01399",
                     "cityName": "京極町",
                     "value": 2337,
                     "ratio": 0.49
                 }, {
                     "cityCode": "01400",
                     "cityName": "倶知安町",
                     "value": 10319,
                     "ratio": 0.52
                 }, {
                     "cityCode": "01401",
                     "cityName": "共和町",
                     "value": 3749,
                     "ratio": 0.73
                 }, {
                     "cityCode": "01402",
                     "cityName": "岩内町",
                     "value": 6734,
                     "ratio": 0.71
                 }, {
                     "cityCode": "01403",
                     "cityName": "泊村",
                     "value": 1113,
                     "ratio": 0.53
                 }, {
                     "cityCode": "01404",
                     "cityName": "神恵内村",
                     "value": 525,
                     "ratio": 0.69
                 }, {
                     "cityCode": "01405",
                     "cityName": "積丹町",
                     "value": 954,
                     "ratio": 0.71
                 }, {
                     "cityCode": "01406",
                     "cityName": "古平町",
                     "value": 1515,
                     "ratio": 0.69
                 }, {
                     "cityCode": "01407",
                     "cityName": "仁木町",
                     "value": 2300,
                     "ratio": 0.56
                 }, {
                     "cityCode": "01408",
                     "cityName": "余市町",
                     "value": 11456,
                     "ratio": 0.65
                 }, {
                     "cityCode": "01409",
                     "cityName": "赤井川村",
                     "value": 829,
                     "ratio": 0.21
                 }, {
                     "cityCode": "01423",
                     "cityName": "南幌町",
                     "value": 4551,
                     "ratio": 0.8
                 }, {
                     "cityCode": "01424",
                     "cityName": "奈井江町",
                     "value": 2810,
                     "ratio": 0.78
                 }, {
                     "cityCode": "01425",
                     "cityName": "上砂川町",
                     "value": 1291,
                     "ratio": 0.78
                 }, {
                     "cityCode": "01427",
                     "cityName": "由仁町",
                     "value": 2926,
                     "ratio": 0.71
                 }, {
                     "cityCode": "01428",
                     "cityName": "長沼町",
                     "value": 7581,
                     "ratio": 0.56
                 }, {
                     "cityCode": "01429",
                     "cityName": "栗山町",
                     "value": 7259,
                     "ratio": 0.58
                 }, {
                     "cityCode": "01430",
                     "cityName": "月形町",
                     "value": 2860,
                     "ratio": 0.73
                 }, {
                     "cityCode": "01431",
                     "cityName": "浦臼町",
                     "value": 1038,
                     "ratio": 0.68
                 }, {
                     "cityCode": "01432",
                     "cityName": "新十津川町",
                     "value": 4106,
                     "ratio": 0.57
                 }, {
                     "cityCode": "01433",
                     "cityName": "妹背牛町",
                     "value": 1400,
                     "ratio": 0.82
                 }, {
                     "cityCode": "01434",
                     "cityName": "秩父別町",
                     "value": 1285,
                     "ratio": 0.69
                 }, {
                     "cityCode": "01436",
                     "cityName": "雨竜町",
                     "value": 1585,
                     "ratio": 0.72
                 }, {
                     "cityCode": "01437",
                     "cityName": "北竜町",
                     "value": 1089,
                     "ratio": 0.61
                 }, {
                     "cityCode": "01438",
                     "cityName": "沼田町",
                     "value": 1618,
                     "ratio": 0.72
                 }, {
                     "cityCode": "01452",
                     "cityName": "鷹栖町",
                     "value": 5126,
                     "ratio": 0.4
                 }, {
                     "cityCode": "01453",
                     "cityName": "東神楽町",
                     "value": 8841,
                     "ratio": 0.16
                 }, {
                     "cityCode": "01454",
                     "cityName": "当麻町",
                     "value": 4019,
                     "ratio": 0.64
                 }, {
                     "cityCode": "01455",
                     "cityName": "比布町",
                     "value": 2090,
                     "ratio": 0.67
                 }, {
                     "cityCode": "01456",
                     "cityName": "愛別町",
                     "value": 1416,
                     "ratio": 0.69
                 }, {
                     "cityCode": "01457",
                     "cityName": "上川町",
                     "value": 1853,
                     "ratio": 0.61
                 }, {
                     "cityCode": "01458",
                     "cityName": "東川町",
                     "value": 6655,
                     "ratio": 0.23
                 }, {
                     "cityCode": "01459",
                     "cityName": "美瑛町",
                     "value": 6282,
                     "ratio": 0.6
                 }, {
                     "cityCode": "01460",
                     "cityName": "上富良野町",
                     "value": 6968,
                     "ratio": 0.46
                 }, {
                     "cityCode": "01461",
                     "cityName": "中富良野町",
                     "value": 3612,
                     "ratio": 0.4
                 }, {
                     "cityCode": "01462",
                     "cityName": "南富良野町",
                     "value": 1476,
                     "ratio": 0.58
                 }, {
                     "cityCode": "01463",
                     "cityName": "占冠村",
                     "value": 758,
                     "ratio": 0.36
                 }, {
                     "cityCode": "01464",
                     "cityName": "和寒町",
                     "value": 1716,
                     "ratio": 0.68
                 }, {
                     "cityCode": "01465",
                     "cityName": "剣淵町",
                     "value": 1849,
                     "ratio": 0.62
                 }, {
                     "cityCode": "01468",
                     "cityName": "下川町",
                     "value": 1823,
                     "ratio": 0.66
                 }, {
                     "cityCode": "01469",
                     "cityName": "美深町",
                     "value": 2810,
                     "ratio": 0.66
                 }, {
                     "cityCode": "01470",
                     "cityName": "音威子府村",
                     "value": 331,
                     "ratio": 0.71
                 }, {
                     "cityCode": "01471",
                     "cityName": "中川町",
                     "value": 787,
                     "ratio": 0.7
                 }, {
                     "cityCode": "01472",
                     "cityName": "幌加内町",
                     "value": 687,
                     "ratio": 0.61
                 }, {
                     "cityCode": "01481",
                     "cityName": "増毛町",
                     "value": 2293,
                     "ratio": 0.6
                 }, {
                     "cityCode": "01482",
                     "cityName": "小平町",
                     "value": 1630,
                     "ratio": 0.74
                 }, {
                     "cityCode": "01483",
                     "cityName": "苫前町",
                     "value": 1401,
                     "ratio": 0.73
                 }, {
                     "cityCode": "01484",
                     "cityName": "羽幌町",
                     "value": 3704,
                     "ratio": 0.74
                 }, {
                     "cityCode": "01485",
                     "cityName": "初山別村",
                     "value": 601,
                     "ratio": 0.65
                 }, {
                     "cityCode": "01486",
                     "cityName": "遠別町",
                     "value": 1396,
                     "ratio": 0.7
                 }, {
                     "cityCode": "01487",
                     "cityName": "天塩町",
                     "value": 1719,
                     "ratio": 0.69
                 }, {
                     "cityCode": "01511",
                     "cityName": "猿払村",
                     "value": 1958,
                     "ratio": 0.41
                 }, {
                     "cityCode": "01512",
                     "cityName": "浜頓別町",
                     "value": 2270,
                     "ratio": 0.57
                 }, {
                     "cityCode": "01513",
                     "cityName": "中頓別町",
                     "value": 764,
                     "ratio": 0.74
                 }, {
                     "cityCode": "01514",
                     "cityName": "枝幸町",
                     "value": 5049,
                     "ratio": 0.52
                 }, {
                     "cityCode": "01516",
                     "cityName": "豊富町",
                     "value": 2127,
                     "ratio": 0.78
                 }, {
                     "cityCode": "01517",
                     "cityName": "礼文町",
                     "value": 1263,
                     "ratio": 0.65
                 }, {
                     "cityCode": "01518",
                     "cityName": "利尻町",
                     "value": 958,
                     "ratio": 0.6
                 }, {
                     "cityCode": "01519",
                     "cityName": "利尻富士町",
                     "value": 1243,
                     "ratio": 0.7
                 }, {
                     "cityCode": "01520",
                     "cityName": "幌延町",
                     "value": 1408,
                     "ratio": 0.63
                 }, {
                     "cityCode": "01543",
                     "cityName": "美幌町",
                     "value": 12794,
                     "ratio": 0.6
                 }, {
                     "cityCode": "01544",
                     "cityName": "津別町",
                     "value": 2515,
                     "ratio": 0.76
                 }, {
                     "cityCode": "01545",
                     "cityName": "斜里町",
                     "value": 8936,
                     "ratio": 0.49
                 }, {
                     "cityCode": "01546",
                     "cityName": "清里町",
                     "value": 2167,
                     "ratio": 0.63
                 }, {
                     "cityCode": "01547",
                     "cityName": "小清水町",
                     "value": 2993,
                     "ratio": 0.6
                 }, {
                     "cityCode": "01549",
                     "cityName": "訓子府町",
                     "value": 2693,
                     "ratio": 0.65
                 }, {
                     "cityCode": "01550",
                     "cityName": "置戸町",
                     "value": 1606,
                     "ratio": 0.61
                 }, {
                     "cityCode": "01552",
                     "cityName": "佐呂間町",
                     "value": 3274,
                     "ratio": 0.51
                 }, {
                     "cityCode": "01555",
                     "cityName": "遠軽町",
                     "value": 12855,
                     "ratio": 0.54
                 }, {
                     "cityCode": "01559",
                     "cityName": "湧別町",
                     "value": 5643,
                     "ratio": 0.59
                 }, {
                     "cityCode": "01560",
                     "cityName": "滝上町",
                     "value": 1245,
                     "ratio": 0.72
                 }, {
                     "cityCode": "01561",
                     "cityName": "興部町",
                     "value": 2388,
                     "ratio": 0.52
                 }, {
                     "cityCode": "01562",
                     "cityName": "西興部村",
                     "value": 726,
                     "ratio": 0.56
                 }, {
                     "cityCode": "01563",
                     "cityName": "雄武町",
                     "value": 2484,
                     "ratio": 0.54
                 }, {
                     "cityCode": "01564",
                     "cityName": "大空町",
                     "value": 4677,
                     "ratio": 0.64
                 }, {
                     "cityCode": "01571",
                     "cityName": "豊浦町",
                     "value": 2333,
                     "ratio": 0.51
                 }, {
                     "cityCode": "01575",
                     "cityName": "壮瞥町",
                     "value": 1486,
                     "ratio": 0.76
                 }, {
                     "cityCode": "01578",
                     "cityName": "白老町",
                     "value": 9855,
                     "ratio": 0.63
                 }, {
                     "cityCode": "01581",
                     "cityName": "厚真町",
                     "value": 2799,
                     "ratio": 0.58
                 }, {
                     "cityCode": "01584",
                     "cityName": "洞爺湖町",
                     "value": 4683,
                     "ratio": 0.73
                 }, {
                     "cityCode": "01585",
                     "cityName": "安平町",
                     "value": 5538,
                     "ratio": 0.48
                 }, {
                     "cityCode": "01586",
                     "cityName": "むかわ町",
                     "value": 4740,
                     "ratio": 0.68
                 }, {
                     "cityCode": "01601",
                     "cityName": "日高町",
                     "value": 7116,
                     "ratio": 0.64
                 }, {
                     "cityCode": "01602",
                     "cityName": "平取町",
                     "value": 2677,
                     "ratio": 0.71
                 }, {
                     "cityCode": "01604",
                     "cityName": "新冠町",
                     "value": 3555,
                     "ratio": 0.59
                 }, {
                     "cityCode": "01607",
                     "cityName": "浦河町",
                     "value": 7248,
                     "ratio": 0.66
                 }, {
                     "cityCode": "01608",
                     "cityName": "様似町",
                     "value": 2314,
                     "ratio": 0.76
                 }, {
                     "cityCode": "01609",
                     "cityName": "えりも町",
                     "value": 3070,
                     "ratio": 0.55
                 }, {
                     "cityCode": "01610",
                     "cityName": "新ひだか町",
                     "value": 14092,
                     "ratio": 0.58
                 }, {
                     "cityCode": "01631",
                     "cityName": "音更町",
                     "value": 45413,
                     "ratio": 0.17
                 }, {
                     "cityCode": "01632",
                     "cityName": "士幌町",
                     "value": 3927,
                     "ratio": 0.65
                 }, {
                     "cityCode": "01633",
                     "cityName": "上士幌町",
                     "value": 2795,
                     "ratio": 0.67
                 }, {
                     "cityCode": "01634",
                     "cityName": "鹿追町",
                     "value": 3892,
                     "ratio": 0.52
                 }, {
                     "cityCode": "01635",
                     "cityName": "新得町",
                     "value": 3760,
                     "ratio": 0.64
                 }, {
                     "cityCode": "01636",
                     "cityName": "清水町",
                     "value": 6345,
                     "ratio": 0.5
                 }, {
                     "cityCode": "01637",
                     "cityName": "芽室町",
                     "value": 17498,
                     "ratio": 0.28
                 }, {
                     "cityCode": "01638",
                     "cityName": "中札内村",
                     "value": 2890,
                     "ratio": 0.44
                 }, {
                     "cityCode": "01639",
                     "cityName": "更別村",
                     "value": 2750,
                     "ratio": 0.43
                 }, {
                     "cityCode": "01641",
                     "cityName": "大樹町",
                     "value": 3575,
                     "ratio": 0.52
                 }, {
                     "cityCode": "01642",
                     "cityName": "広尾町",
                     "value": 4528,
                     "ratio": 0.61
                 }, {
                     "cityCode": "01643",
                     "cityName": "幕別町",
                     "value": 22174,
                     "ratio": 0.32
                 }, {
                     "cityCode": "01644",
                     "cityName": "池田町",
                     "value": 3890,
                     "ratio": 0.65
                 }, {
                     "cityCode": "01645",
                     "cityName": "豊頃町",
                     "value": 1490,
                     "ratio": 0.7
                 }, {
                     "cityCode": "01646",
                     "cityName": "本別町",
                     "value": 4099,
                     "ratio": 0.59
                 }, {
                     "cityCode": "01647",
                     "cityName": "足寄町",
                     "value": 3895,
                     "ratio": 0.55
                 }, {
                     "cityCode": "01648",
                     "cityName": "陸別町",
                     "value": 1097,
                     "ratio": 0.73
                 }, {
                     "cityCode": "01649",
                     "cityName": "浦幌町",
                     "value": 2355,
                     "ratio": 0.65
                 }, {
                     "cityCode": "01661",
                     "cityName": "釧路町",
                     "value": 11941,
                     "ratio": 0.7
                 }, {
                     "cityCode": "01662",
                     "cityName": "厚岸町",
                     "value": 5610,
                     "ratio": 0.6
                 }, {
                     "cityCode": "01663",
                     "cityName": "浜中町",
                     "value": 3656,
                     "ratio": 0.61
                 }, {
                     "cityCode": "01664",
                     "cityName": "標茶町",
                     "value": 4557,
                     "ratio": 0.54
                 }, {
                     "cityCode": "01665",
                     "cityName": "弟子屈町",
                     "value": 4175,
                     "ratio": 0.57
                 }, {
                     "cityCode": "01667",
                     "cityName": "鶴居村",
                     "value": 1966,
                     "ratio": 0.46
                 }, {
                     "cityCode": "01668",
                     "cityName": "白糠町",
                     "value": 3799,
                     "ratio": 0.76
                 }, {
                     "cityCode": "01691",
                     "cityName": "別海町",
                     "value": 10687,
                     "ratio": 0.5
                 }, {
                     "cityCode": "01692",
                     "cityName": "中標津町",
                     "value": 20443,
                     "ratio": 0.36
                 }, {
                     "cityCode": "01693",
                     "cityName": "標津町",
                     "value": 3038,
                     "ratio": 0.65
                 }, {
                     "cityCode": "01694",
                     "cityName": "羅臼町",
                     "value": 2756,
                     "ratio": 0.74
                 }]
             }
         }
        actual = self.resaspy.population.future.cities( 2040, 1 )
        self.assertEqual( expected, actual )

class MunicipalityTest( unittest.TestCase ):
    def setUp( self ):
        api_key = os.environ['RESAS_API_KEY']
        self.resaspy = Resaspy( api_key )
        #self.maxDiff = None

    def test_municipality_company_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 11,
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "sicName": "製造業",
                "sicCode": "E",
                "simcName": "なめし革・同製品・毛皮製造業",
                "simcCode": "20",
                "data": [{
                    "year": 2009,
                    "value": 0
                }, {
                    "year": 2012,
                    "value": 0
                }, {
                    "year": 2014,
                    "value": 0
                }]
            }
        }
        actual = self.resaspy.municipality.company.per_year( 11, 11362, 'E', 20 )
        self.assertEqual( expected, actual )

    def test_municipality_plant_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 11,
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "sicName": "製造業",
                "sicCode": "E",
                "simcName": "なめし革・同製品・毛皮製造業",
                "simcCode": "20",
                "data": [{
                    "year": 2009,
                    "value": 0
                }, {
                    "year": 2012,
                    "value": 0
                }, {
                    "year": 2014,
                    "value": 0
                }]
            }
        }
        actual = self.resaspy.municipality.plant.per_year( 11, 11362, 'E', 20 )
        self.assertEqual( expected, actual )

    def test_municipality_foundation_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 11,
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "data": [{
                    "year": "2009～2012年",
                    "value": 0.59
                }]
            }
        }
        actual = self.resaspy.municipality.foundation.per_year( 11, 11362 )
        self.assertEqual( expected, actual )

    def test_municipality_taxes_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 11,
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "data": [{
                    "year": 2008,
                    "value": 108
                }, {
                    "year": 2009,
                    "value": 102
                }, {
                    "year": 2010,
                    "value": 119
                }, {
                    "year": 2011,
                    "value": 102
                }, {
                    "year": 2012,
                    "value": 101
                }, {
                    "year": 2013,
                    "value": 103
                }, {
                    "year": 2014,
                    "value": 107
                }]
            }
        }
        actual = self.resaspy.municipality.taxes.per_year( 11, 11362 )
        self.assertEqual( expected, actual )

    def test_municipality_job_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 11,
                "prefName": "埼玉県",
                "data": [{
                    "year": "2011/04",
                    "value": 0.02
                }, {
                    "year": "2011/05",
                    "value": 0.08
                }, {
                    "year": "2011/06",
                    "value": 0.15
                }, {
                    "year": "2011/07",
                    "value": 0.08
                }, {
                    "year": "2011/08",
                    "value": 0.18
                }, {
                    "year": "2011/09",
                    "value": 0.21
                }, {
                    "year": "2011/10",
                    "value": 0.21
                }, {
                    "year": "2011/11",
                    "value": 0.2
                }, {
                    "year": "2011/12",
                    "value": 0.07
                }, {
                    "year": "2012/01",
                    "value": 0.08
                }, {
                    "year": "2012/02",
                    "value": 0.29
                }, {
                    "year": "2012/03",
                    "value": 0.1
                }, {
                    "year": "2012/04",
                    "value": 0.08
                }, {
                    "year": "2012/05",
                    "value": 0.06
                }, {
                    "year": "2012/06",
                    "value": 0.07
                }, {
                    "year": "2012/07",
                    "value": 0.04
                }, {
                    "year": "2012/08",
                    "value": 0.13
                }, {
                    "year": "2012/09",
                    "value": 0.14
                }, {
                    "year": "2012/10",
                    "value": 0.05
                }, {
                    "year": "2012/11",
                    "value": 0.05
                }, {
                    "year": "2012/12",
                    "value": 0
                }, {
                    "year": "2013/01",
                    "value": 0
                }, {
                    "year": "2013/02",
                    "value": 0.12
                }, {
                    "year": "2013/03",
                    "value": 0.16
                }, {
                    "year": "2013/04",
                    "value": 0.04
                }, {
                    "year": "2013/05",
                    "value": 0
                }, {
                    "year": "2013/06",
                    "value": 0.04
                }, {
                    "year": "2013/07",
                    "value": 0.05
                }, {
                    "year": "2013/08",
                    "value": 0.06
                }, {
                    "year": "2013/09",
                    "value": 0.15
                }, {
                    "year": "2013/10",
                    "value": 0.09
                }, {
                    "year": "2013/11",
                    "value": 0
                }, {
                    "year": "2013/12",
                    "value": 0
                }, {
                    "year": "2014/01",
                    "value": 0.07
                }, {
                    "year": "2014/02",
                    "value": 0.38
                }, {
                    "year": "2014/03",
                    "value": 0.4
                }, {
                    "year": "2014/04",
                    "value": 0.08
                }, {
                    "year": "2014/05",
                    "value": 0.17
                }, {
                    "year": "2014/06",
                    "value": 0.07
                }, {
                    "year": "2014/07",
                    "value": 0.27
                }, {
                    "year": "2014/08",
                    "value": 0.23
                }, {
                    "year": "2014/09",
                    "value": 0.14
                }, {
                    "year": "2014/10",
                    "value": 0.07
                }, {
                    "year": "2014/11",
                    "value": 0.08
                }, {
                    "year": "2014/12",
                    "value": 0.1
                }, {
                    "year": "2015/01",
                    "value": 0.17
                }, {
                    "year": "2015/02",
                    "value": 0.2
                }, {
                    "year": "2015/03",
                    "value": 0.13
                }, {
                    "year": "2015/04",
                    "value": 0.07
                }, {
                    "year": "2015/05",
                    "value": 0.07
                }, {
                    "year": "2015/06",
                    "value": 0
                }, {
                    "year": "2015/07",
                    "value": 0.2
                }, {
                    "year": "2015/08",
                    "value": 0.15
                }, {
                    "year": "2015/09",
                    "value": 0.06
                }, {
                    "year": "2015/10",
                    "value": 0
                }]
            }
        }
        actual = self.resaspy.municipality.job.per_year( 11, 'B', '06' )
        self.assertEqual( expected, actual )

    def test_municipality_manufacture_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 12,
                "prefName": "千葉県",
                "cityCode": "12217",
                "cityName": "柏市",
                "sicName": "製造業",
                "sicCode": "E",
                "simcName": "飲料・たばこ・飼料製造業",
                "simcCode": "10",
                "data": [{
                    "year": 2008,
                    "value": 32184.17
                }, {
                    "year": 2009,
                    "value": 33346.06
                }, {
                    "year": 2010,
                    "value": 33609.21
                }]
            }
        }
        actual = self.resaspy.municipality.manufacture.per_year( 10, 12217, 'E', 10 )
        self.assertEqual( expected, actual )

    def test_municipality_employee_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 11,
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "sicName": "製造業",
                "sicCode": "E",
                "simcName": "なめし革・同製品・毛皮製造業",
                "simcCode": "20",
                "data": [{
                    "year": 2009,
                    "value": 0
                }, {
                    "year": 2012,
                    "value": 0
                }, {
                    "year": 2014,
                    "value": 0
                }]
            }
        }
        actual = self.resaspy.municipality.employee.per_year( 11, 11362, 'E', 20 )
        self.assertEqual( expected, actual )

    def test_municipality_value_per_year(self):
        expected = {
            "message": None,
            "result": {
                "prefCode": 13,
                "prefName": "東京都",
                "cityCode": "13101",
                "cityName": "千代田区",
                "sicName": "卸売業、小売業",
                "sicCode": "I",
                "simcName": "繊維・衣服等卸売業",
                "simcCode": "51",
                "data": [{
                    "year": 2012,
                    "value": 62195,
                    "concealmentFlg": 0
                }]
            }
        }
        actual = self.resaspy.municipality.value.per_year( 2012, 13, 13101, 'I', 51 )
        self.assertEqual( expected, actual )

    def test_municipality_labor_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 13,
                "prefName": "東京都",
                "cityCode": "13105",
                "cityName": "文京区",
                "sicName": "卸売業，小売業",
                "simcName": "繊維・衣服等卸売業",
                "data": [{
                    "year": 2012,
                    "value": 5657,
                    "concealmentFlg": 0
                }]
            }
        }
        actual = self.resaspy.municipality.labor.per_year( 2012, 13, 13105, 'I', 51 )
        self.assertEqual( expected, actual )

    def test_municipality_surplus_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 11,
                "prefName": "埼玉県",
                "cityCode": "11362",
                "cityName": "皆野町",
                "sicName": "製造業",
                "sicCode": "I",
                "simcName": "なめし革・同製品・毛皮製造業",
                "simcCode": "20",
                "data": []
            }
        }
        actual = self.resaspy.municipality.surplus.per_year( 2012, 11, 11362, 'I', 20 )
        self.assertEqual( expected, actual )

    def test_municipality_wages_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 11,
                "prefName": "埼玉県",
                "sicName": "",
                "sicCode": "",
                "simcName": "",
                "simcCode": "",
                "data": [{
                    "year": 2010,
                    "value": 509.4
                }, {
                    "year": 2011,
                    "value": 515.3
                }, {
                    "year": 2012,
                    "value": 494.7
                }, {
                    "year": 2013,
                    "value": 516.1
                }, {
                    "year": 2014,
                    "value": 539.2
                }]
            }
        }
        actual = self.resaspy.municipality.wages.per_year( 11, '-', '-', 10 )
        self.assertEqual( expected, actual )

    def test_municipality_sales_per_year( self ):
        expected = {
            "message": None,
            "result": {
                "prefCode": 13,
                "prefName": "東京都",
                "cityCode": "",
                "cityName": "",
                "sicName": "",
                "sicCode": "",
                "simcName": "",
                "simcCode": "",
                "data": [{
                    "year": 1994,
                    "value": 195511202
                }, {
                    "year": 1997,
                    "value": 166718215
                }, {
                    "year": 1999,
                    "value": 203252988
                }, {
                    "year": 2002,
                    "value": 176834958
                }, {
                    "year": 2004,
                    "value": 177033179
                }, {
                    "year": 2007,
                    "value": 182362810
                }]
            }
        }
        actual = self.resaspy.municipality.sales.per_year( 13, '-', '-', '-', 1 )
        self.assertEqual( expected, actual )

if __name__ == '__main__':
    unittest.main()

